/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class KPP_KPCR_KCO : uint8_t
{
    TOTEM_POLE /*!< Column strobe output is totem pole drive. */,
    OPEN_DRAIN = 1 /*!< Column strobe output is open drain. */
};
static_assert(sizeof(KPP_KPCR_KCO) == 1);

/**
 * Converts KPP_KPCR_KCO to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(KPP_KPCR_KCO instance)
{
    const char *result = "UNKNOWN KPP_KPCR_KCO";

    switch (instance)
    {
    case KPP_KPCR_KCO::TOTEM_POLE:
        result = "TOTEM_POLE";
        break;
    case KPP_KPCR_KCO::OPEN_DRAIN:
        result = "OPEN_DRAIN";
        break;
    }

    return result;
}

/**
 * Converts a C string to KPP_KPCR_KCO.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, KPP_KPCR_KCO &output)
{
    bool result = false;

    if ((result = !strncmp(data, "TOTEM_POLE", 10)))
    {
        output = KPP_KPCR_KCO::TOTEM_POLE;
    }
    else if ((result = !strncmp(data, "OPEN_DRAIN", 10)))
    {
        output = KPP_KPCR_KCO::OPEN_DRAIN;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
