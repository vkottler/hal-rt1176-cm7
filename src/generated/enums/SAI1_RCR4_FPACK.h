/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class SAI1_RCR4_FPACK : uint8_t
{
    DISABLED /*!< FIFO packing is disabled */,
    EIGHT_BIT_PACKING = 2 /*!< 8-bit FIFO packing is enabled */,
    SIXTEEN_BIT_PACKING = 3 /*!< 16-bit FIFO packing is enabled */
};
static_assert(sizeof(SAI1_RCR4_FPACK) == 1);

/**
 * Converts SAI1_RCR4_FPACK to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(SAI1_RCR4_FPACK instance)
{
    const char *result = "UNKNOWN SAI1_RCR4_FPACK";

    switch (instance)
    {
    case SAI1_RCR4_FPACK::DISABLED:
        result = "DISABLED";
        break;
    case SAI1_RCR4_FPACK::EIGHT_BIT_PACKING:
        result = "EIGHT_BIT_PACKING";
        break;
    case SAI1_RCR4_FPACK::SIXTEEN_BIT_PACKING:
        result = "SIXTEEN_BIT_PACKING";
        break;
    }

    return result;
}

/**
 * Converts a C string to SAI1_RCR4_FPACK.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, SAI1_RCR4_FPACK &output)
{
    bool result = false;

    if ((result = !strncmp(data, "DISABLED", 8)))
    {
        output = SAI1_RCR4_FPACK::DISABLED;
    }
    else if ((result = !strncmp(data, "EIGHT_BIT_PACKING", 17)))
    {
        output = SAI1_RCR4_FPACK::EIGHT_BIT_PACKING;
    }
    else if ((result = !strncmp(data, "SIXTEEN_BIT_PACKING", 19)))
    {
        output = SAI1_RCR4_FPACK::SIXTEEN_BIT_PACKING;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
