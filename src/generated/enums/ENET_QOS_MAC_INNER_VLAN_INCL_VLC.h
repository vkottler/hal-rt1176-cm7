/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class ENET_QOS_MAC_INNER_VLAN_INCL_VLC : uint8_t
{
    NONE /*!< No VLAN tag deletion, insertion, or replacement */,
    DELETE = 1 /*!< VLAN tag deletion */,
    INSERT = 2 /*!< VLAN tag insertion */,
    REPLACE = 3 /*!< VLAN tag replacement */
};
static_assert(sizeof(ENET_QOS_MAC_INNER_VLAN_INCL_VLC) == 1);

/**
 * Converts ENET_QOS_MAC_INNER_VLAN_INCL_VLC to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(ENET_QOS_MAC_INNER_VLAN_INCL_VLC instance)
{
    const char *result = "UNKNOWN ENET_QOS_MAC_INNER_VLAN_INCL_VLC";

    switch (instance)
    {
    case ENET_QOS_MAC_INNER_VLAN_INCL_VLC::NONE:
        result = "NONE";
        break;
    case ENET_QOS_MAC_INNER_VLAN_INCL_VLC::DELETE:
        result = "DELETE";
        break;
    case ENET_QOS_MAC_INNER_VLAN_INCL_VLC::INSERT:
        result = "INSERT";
        break;
    case ENET_QOS_MAC_INNER_VLAN_INCL_VLC::REPLACE:
        result = "REPLACE";
        break;
    }

    return result;
}

/**
 * Converts a C string to ENET_QOS_MAC_INNER_VLAN_INCL_VLC.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        ENET_QOS_MAC_INNER_VLAN_INCL_VLC &output)
{
    bool result = false;

    if ((result = !strncmp(data, "NONE", 4)))
    {
        output = ENET_QOS_MAC_INNER_VLAN_INCL_VLC::NONE;
    }
    else if ((result = !strncmp(data, "DELETE", 6)))
    {
        output = ENET_QOS_MAC_INNER_VLAN_INCL_VLC::DELETE;
    }
    else if ((result = !strncmp(data, "INSERT", 6)))
    {
        output = ENET_QOS_MAC_INNER_VLAN_INCL_VLC::INSERT;
    }
    else if ((result = !strncmp(data, "REPLACE", 7)))
    {
        output = ENET_QOS_MAC_INNER_VLAN_INCL_VLC::REPLACE;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
