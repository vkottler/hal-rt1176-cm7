/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE : uint8_t
{
    _0_enet_1g_1588_EVENT0_IN /*!< Select mux mode: ALT0 mux port:
                                 ENET_1G_1588_EVENT0_IN of instance: ENET_1G */
        ,
    _1_usb_OTG1_PWR =
        1 /*!< Select mux mode: ALT1 mux port: USB_OTG1_PWR of instance: USB */
        ,
    _2_XBAR1_INOUT18 = 2 /*!< Select mux mode: ALT2 mux port: XBAR1_INOUT18 of
                            instance: XBAR1 */
        ,
    _3_enet_1588_EVENT0_IN = 3 /*!< Select mux mode: ALT3 mux port:
                                  ENET_1588_EVENT0_IN of instance: ENET */
        ,
    _4_usdhc1_VSELECT = 4 /*!< Select mux mode: ALT4 mux port: USDHC1_VSELECT
                             of instance: USDHC1 */
        ,
    _5_gpio_mux4_IO1 = 5 /*!< Select mux mode: ALT5 mux port: GPIO_MUX4_IO01 of
                            instance: GPIO_MUX4 */
        ,
    _6_kpp_ROW0 =
        6 /*!< Select mux mode: ALT6 mux port: KPP_ROW00 of instance: KPP */,
    _8_lpuart10_CTS_B = 8 /*!< Select mux mode: ALT8 mux port: LPUART10_CTS_B
                             of instance: LPUART10 */
        ,
    _9_WDOG1_ANY =
        9 /*!< Select mux mode: ALT9 mux port: WDOG1_ANY of instance: WDOG1 */,
    _10_gpio10_IO1 = 10 /*!< Select mux mode: ALT10 mux port: GPIO10_IO01 of
                           instance: GPIO10 */
};
static_assert(sizeof(IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE) == 1);

/**
 * Converts IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(
    IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE instance)
{
    const char *result = "UNKNOWN IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE";

    switch (instance)
    {
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE::_0_enet_1g_1588_EVENT0_IN:
        result = "_0_enet_1g_1588_EVENT0_IN";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE::_1_usb_OTG1_PWR:
        result = "_1_usb_OTG1_PWR";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE::_2_XBAR1_INOUT18:
        result = "_2_XBAR1_INOUT18";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE::_3_enet_1588_EVENT0_IN:
        result = "_3_enet_1588_EVENT0_IN";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE::_4_usdhc1_VSELECT:
        result = "_4_usdhc1_VSELECT";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE::_5_gpio_mux4_IO1:
        result = "_5_gpio_mux4_IO1";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE::_6_kpp_ROW0:
        result = "_6_kpp_ROW0";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE::_8_lpuart10_CTS_B:
        result = "_8_lpuart10_CTS_B";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE::_9_WDOG1_ANY:
        result = "_9_WDOG1_ANY";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE::_10_gpio10_IO1:
        result = "_10_gpio10_IO1";
        break;
    }

    return result;
}

/**
 * Converts a C string to IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0_enet_1g_1588_EVENT0_IN", 25)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE::
            _0_enet_1g_1588_EVENT0_IN;
    }
    else if ((result = !strncmp(data, "_1_usb_OTG1_PWR", 15)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE::_1_usb_OTG1_PWR;
    }
    else if ((result = !strncmp(data, "_2_XBAR1_INOUT18", 16)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE::_2_XBAR1_INOUT18;
    }
    else if ((result = !strncmp(data, "_3_enet_1588_EVENT0_IN", 22)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE::_3_enet_1588_EVENT0_IN;
    }
    else if ((result = !strncmp(data, "_4_usdhc1_VSELECT", 17)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE::_4_usdhc1_VSELECT;
    }
    else if ((result = !strncmp(data, "_5_gpio_mux4_IO1", 16)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE::_5_gpio_mux4_IO1;
    }
    else if ((result = !strncmp(data, "_6_kpp_ROW0", 11)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE::_6_kpp_ROW0;
    }
    else if ((result = !strncmp(data, "_8_lpuart10_CTS_B", 17)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE::_8_lpuart10_CTS_B;
    }
    else if ((result = !strncmp(data, "_9_WDOG1_ANY", 12)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE::_9_WDOG1_ANY;
    }
    else if ((result = !strncmp(data, "_10_gpio10_IO1", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_34_MUX_MODE::_10_gpio10_IO1;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
