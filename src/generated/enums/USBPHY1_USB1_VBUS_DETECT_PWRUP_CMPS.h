/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class USBPHY1_USB1_VBUS_DETECT_PWRUP_CMPS : uint8_t
{
    DISABLE /*!< Powers down the VBUS_VALID comparator */,
    ENABLE = 1 /*!< Enables the SESS_VALID comparator (default) */,
    VDETECT = 2 /*!< Enables the 3Vdetect (default) */
};
static_assert(sizeof(USBPHY1_USB1_VBUS_DETECT_PWRUP_CMPS) == 1);

/**
 * Converts USBPHY1_USB1_VBUS_DETECT_PWRUP_CMPS to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USBPHY1_USB1_VBUS_DETECT_PWRUP_CMPS instance)
{
    const char *result = "UNKNOWN USBPHY1_USB1_VBUS_DETECT_PWRUP_CMPS";

    switch (instance)
    {
    case USBPHY1_USB1_VBUS_DETECT_PWRUP_CMPS::DISABLE:
        result = "DISABLE";
        break;
    case USBPHY1_USB1_VBUS_DETECT_PWRUP_CMPS::ENABLE:
        result = "ENABLE";
        break;
    case USBPHY1_USB1_VBUS_DETECT_PWRUP_CMPS::VDETECT:
        result = "VDETECT";
        break;
    }

    return result;
}

/**
 * Converts a C string to USBPHY1_USB1_VBUS_DETECT_PWRUP_CMPS.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        USBPHY1_USB1_VBUS_DETECT_PWRUP_CMPS &output)
{
    bool result = false;

    if ((result = !strncmp(data, "DISABLE", 7)))
    {
        output = USBPHY1_USB1_VBUS_DETECT_PWRUP_CMPS::DISABLE;
    }
    else if ((result = !strncmp(data, "ENABLE", 6)))
    {
        output = USBPHY1_USB1_VBUS_DETECT_PWRUP_CMPS::ENABLE;
    }
    else if ((result = !strncmp(data, "VDETECT", 7)))
    {
        output = USBPHY1_USB1_VBUS_DETECT_PWRUP_CMPS::VDETECT;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
