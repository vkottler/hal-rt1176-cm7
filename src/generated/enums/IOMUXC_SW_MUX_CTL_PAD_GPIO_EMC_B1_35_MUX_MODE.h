/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B1_35_MUX_MODE : uint8_t
{
    _0_semc_DATA13 /*!< Select mux mode: ALT0 mux port: SEMC_DATA13 of
                      instance: SEMC */
        ,
    _1_XBAR1_INOUT9 = 1 /*!< Select mux mode: ALT1 mux port: XBAR1_INOUT09 of
                           instance: XBAR1 */
        ,
    _5_gpio_mux2_IO3 = 5 /*!< Select mux mode: ALT5 mux port: GPIO_MUX2_IO03 of
                            instance: GPIO_MUX2 */
        ,
    _10_gpio8_IO3 = 10 /*!< Select mux mode: ALT10 mux port: GPIO8_IO03 of
                          instance: GPIO8 */
};
static_assert(sizeof(IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B1_35_MUX_MODE) == 1);

/**
 * Converts IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B1_35_MUX_MODE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(
    IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B1_35_MUX_MODE instance)
{
    const char *result =
        "UNKNOWN IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B1_35_MUX_MODE";

    switch (instance)
    {
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B1_35_MUX_MODE::_0_semc_DATA13:
        result = "_0_semc_DATA13";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B1_35_MUX_MODE::_1_XBAR1_INOUT9:
        result = "_1_XBAR1_INOUT9";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B1_35_MUX_MODE::_5_gpio_mux2_IO3:
        result = "_5_gpio_mux2_IO3";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B1_35_MUX_MODE::_10_gpio8_IO3:
        result = "_10_gpio8_IO3";
        break;
    }

    return result;
}

/**
 * Converts a C string to IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B1_35_MUX_MODE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B1_35_MUX_MODE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0_semc_DATA13", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B1_35_MUX_MODE::_0_semc_DATA13;
    }
    else if ((result = !strncmp(data, "_1_XBAR1_INOUT9", 15)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B1_35_MUX_MODE::_1_XBAR1_INOUT9;
    }
    else if ((result = !strncmp(data, "_5_gpio_mux2_IO3", 16)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B1_35_MUX_MODE::_5_gpio_mux2_IO3;
    }
    else if ((result = !strncmp(data, "_10_gpio8_IO3", 13)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B1_35_MUX_MODE::_10_gpio8_IO3;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
