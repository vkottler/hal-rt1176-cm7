/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE : uint8_t
{
    _0_lpi2c1_SCL /*!< Select mux mode: ALT0 mux port: LPI2C1_SCL of instance:
                     LPI2C1 */
        ,
    _1_usbphy2_OTG_ID = 1 /*!< Select mux mode: ALT1 mux port: USBPHY2_OTG_ID
                             of instance: USBPHY2 */
        ,
    _2_pgmc_PMIC_RDY = 2 /*!< Select mux mode: ALT2 mux port: PGMC_PMIC_RDY of
                            instance: pgmc */
        ,
    _3_enet_MDC =
        3 /*!< Select mux mode: ALT3 mux port: ENET_MDC of instance: ENET */,
    _4_usdhc1_CD_B = 4 /*!< Select mux mode: ALT4 mux port: USDHC1_CD_B of
                          instance: USDHC1 */
        ,
    _5_gpio_mux3_IO31 = 5 /*!< Select mux mode: ALT5 mux port: GPIO_MUX3_IO31
                             of instance: GPIO_MUX3 */
        ,
    _6_kpp_ROW1 =
        6 /*!< Select mux mode: ALT6 mux port: KPP_ROW01 of instance: KPP */,
    _8_lpuart10_TX = 8 /*!< Select mux mode: ALT8 mux port: LPUART10_TXD of
                          instance: LPUART10 */
        ,
    _9_enet_1g_MDC = 9 /*!< Select mux mode: ALT9 mux port: ENET_1G_MDC of
                          instance: ENET_1G */
        ,
    _10_gpio9_IO31 = 10 /*!< Select mux mode: ALT10 mux port: GPIO9_IO31 of
                           instance: GPIO9 */
};
static_assert(sizeof(IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE) == 1);

/**
 * Converts IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(
    IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE instance)
{
    const char *result = "UNKNOWN IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE";

    switch (instance)
    {
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE::_0_lpi2c1_SCL:
        result = "_0_lpi2c1_SCL";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE::_1_usbphy2_OTG_ID:
        result = "_1_usbphy2_OTG_ID";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE::_2_pgmc_PMIC_RDY:
        result = "_2_pgmc_PMIC_RDY";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE::_3_enet_MDC:
        result = "_3_enet_MDC";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE::_4_usdhc1_CD_B:
        result = "_4_usdhc1_CD_B";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE::_5_gpio_mux3_IO31:
        result = "_5_gpio_mux3_IO31";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE::_6_kpp_ROW1:
        result = "_6_kpp_ROW1";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE::_8_lpuart10_TX:
        result = "_8_lpuart10_TX";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE::_9_enet_1g_MDC:
        result = "_9_enet_1g_MDC";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE::_10_gpio9_IO31:
        result = "_10_gpio9_IO31";
        break;
    }

    return result;
}

/**
 * Converts a C string to IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0_lpi2c1_SCL", 13)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE::_0_lpi2c1_SCL;
    }
    else if ((result = !strncmp(data, "_1_usbphy2_OTG_ID", 17)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE::_1_usbphy2_OTG_ID;
    }
    else if ((result = !strncmp(data, "_2_pgmc_PMIC_RDY", 16)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE::_2_pgmc_PMIC_RDY;
    }
    else if ((result = !strncmp(data, "_3_enet_MDC", 11)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE::_3_enet_MDC;
    }
    else if ((result = !strncmp(data, "_4_usdhc1_CD_B", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE::_4_usdhc1_CD_B;
    }
    else if ((result = !strncmp(data, "_5_gpio_mux3_IO31", 17)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE::_5_gpio_mux3_IO31;
    }
    else if ((result = !strncmp(data, "_6_kpp_ROW1", 11)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE::_6_kpp_ROW1;
    }
    else if ((result = !strncmp(data, "_8_lpuart10_TX", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE::_8_lpuart10_TX;
    }
    else if ((result = !strncmp(data, "_9_enet_1g_MDC", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE::_9_enet_1g_MDC;
    }
    else if ((result = !strncmp(data, "_10_gpio9_IO31", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_32_MUX_MODE::_10_gpio9_IO31;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
