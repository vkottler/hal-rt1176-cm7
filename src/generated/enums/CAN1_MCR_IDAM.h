/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class CAN1_MCR_IDAM : uint8_t
{
    one_full_ID /*!< Format A: One full ID (standard and extended) per ID
                   filter table element. */
        ,
    two_full_ID =
        1 /*!< Format B: Two full standard IDs or two partial 14-bit (standard
             and extended) IDs per ID filter table element. */
        ,
    four_partial_ID = 2 /*!< Format C: Four partial 8-bit standard IDs per ID
                           filter table element. */
        ,
    all_frames_rejected = 3 /*!< Format D: All frames rejected. */
};
static_assert(sizeof(CAN1_MCR_IDAM) == 1);

/**
 * Converts CAN1_MCR_IDAM to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(CAN1_MCR_IDAM instance)
{
    const char *result = "UNKNOWN CAN1_MCR_IDAM";

    switch (instance)
    {
    case CAN1_MCR_IDAM::one_full_ID:
        result = "one_full_ID";
        break;
    case CAN1_MCR_IDAM::two_full_ID:
        result = "two_full_ID";
        break;
    case CAN1_MCR_IDAM::four_partial_ID:
        result = "four_partial_ID";
        break;
    case CAN1_MCR_IDAM::all_frames_rejected:
        result = "all_frames_rejected";
        break;
    }

    return result;
}

/**
 * Converts a C string to CAN1_MCR_IDAM.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, CAN1_MCR_IDAM &output)
{
    bool result = false;

    if ((result = !strncmp(data, "one_full_ID", 11)))
    {
        output = CAN1_MCR_IDAM::one_full_ID;
    }
    else if ((result = !strncmp(data, "two_full_ID", 11)))
    {
        output = CAN1_MCR_IDAM::two_full_ID;
    }
    else if ((result = !strncmp(data, "four_partial_ID", 15)))
    {
        output = CAN1_MCR_IDAM::four_partial_ID;
    }
    else if ((result = !strncmp(data, "all_frames_rejected", 19)))
    {
        output = CAN1_MCR_IDAM::all_frames_rejected;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
