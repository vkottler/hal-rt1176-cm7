/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class TMR1_CTRL1_SCS : uint8_t
{
    _0_IN /*!< Counter 0 input pin */,
    _1_IN = 1 /*!< Counter 1 input pin */,
    _2_IN = 2 /*!< Counter 2 input pin */,
    _3_IN = 3 /*!< Counter 3 input pin */
};
static_assert(sizeof(TMR1_CTRL1_SCS) == 1);

/**
 * Converts TMR1_CTRL1_SCS to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(TMR1_CTRL1_SCS instance)
{
    const char *result = "UNKNOWN TMR1_CTRL1_SCS";

    switch (instance)
    {
    case TMR1_CTRL1_SCS::_0_IN:
        result = "_0_IN";
        break;
    case TMR1_CTRL1_SCS::_1_IN:
        result = "_1_IN";
        break;
    case TMR1_CTRL1_SCS::_2_IN:
        result = "_2_IN";
        break;
    case TMR1_CTRL1_SCS::_3_IN:
        result = "_3_IN";
        break;
    }

    return result;
}

/**
 * Converts a C string to TMR1_CTRL1_SCS.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, TMR1_CTRL1_SCS &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0_IN", 5)))
    {
        output = TMR1_CTRL1_SCS::_0_IN;
    }
    else if ((result = !strncmp(data, "_1_IN", 5)))
    {
        output = TMR1_CTRL1_SCS::_1_IN;
    }
    else if ((result = !strncmp(data, "_2_IN", 5)))
    {
        output = TMR1_CTRL1_SCS::_2_IN;
    }
    else if ((result = !strncmp(data, "_3_IN", 5)))
    {
        output = TMR1_CTRL1_SCS::_3_IN;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
