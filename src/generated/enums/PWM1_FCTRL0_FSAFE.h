/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class PWM1_FCTRL0_FSAFE : uint8_t
{
    NORMAL /*!< Normal mode. PWM outputs disabled by this fault are not enabled
              until FSTS[FFLAGx] is clear at the start of a half cycle or full
              cycle depending on the states of FSTS[FHALF] and FSTS[FFULL]
              without regard to the state of FSTS[FFPINx]. If neither FHALF nor
              FFULL is set then the fault condition cannot be cleared. The PWM
              outputs disabled by this fault input will not be re-enabled until
              the actual FAULTx input signal de-asserts since the fault input
              will combinationally disable the PWM outputs (as programmed in
              DISMAPn). */
        ,
    SAFE = 1 /*!< Safe mode. PWM outputs disabled by this fault are not enabled
                until FSTS[FFLAGx] is clear and FSTS[FFPINx] is clear at the
                start of a half cycle or full cycle depending on the states of
                FSTS[FHALF] and FSTS[FFULL]. If neither FHLAF nor FFULL is set,
                then the fault condition cannot be cleared. */
};
static_assert(sizeof(PWM1_FCTRL0_FSAFE) == 1);

/**
 * Converts PWM1_FCTRL0_FSAFE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(PWM1_FCTRL0_FSAFE instance)
{
    const char *result = "UNKNOWN PWM1_FCTRL0_FSAFE";

    switch (instance)
    {
    case PWM1_FCTRL0_FSAFE::NORMAL:
        result = "NORMAL";
        break;
    case PWM1_FCTRL0_FSAFE::SAFE:
        result = "SAFE";
        break;
    }

    return result;
}

/**
 * Converts a C string to PWM1_FCTRL0_FSAFE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, PWM1_FCTRL0_FSAFE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "NORMAL", 6)))
    {
        output = PWM1_FCTRL0_FSAFE::NORMAL;
    }
    else if ((result = !strncmp(data, "SAFE", 4)))
    {
        output = PWM1_FCTRL0_FSAFE::SAFE;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
