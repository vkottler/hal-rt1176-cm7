/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class PHY_LDO_CTRL0_LINREG_OUTPUT_TRG : uint8_t
{
    _0 /*!< Set output voltage to x.xV */,
    _16 = 16 /*!< Sets output voltage to 1.0V */,
    _31 = 31 /*!< Set output voltage to x.xV */
};
static_assert(sizeof(PHY_LDO_CTRL0_LINREG_OUTPUT_TRG) == 1);

/**
 * Converts PHY_LDO_CTRL0_LINREG_OUTPUT_TRG to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(PHY_LDO_CTRL0_LINREG_OUTPUT_TRG instance)
{
    const char *result = "UNKNOWN PHY_LDO_CTRL0_LINREG_OUTPUT_TRG";

    switch (instance)
    {
    case PHY_LDO_CTRL0_LINREG_OUTPUT_TRG::_0:
        result = "_0";
        break;
    case PHY_LDO_CTRL0_LINREG_OUTPUT_TRG::_16:
        result = "_16";
        break;
    case PHY_LDO_CTRL0_LINREG_OUTPUT_TRG::_31:
        result = "_31";
        break;
    }

    return result;
}

/**
 * Converts a C string to PHY_LDO_CTRL0_LINREG_OUTPUT_TRG.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        PHY_LDO_CTRL0_LINREG_OUTPUT_TRG &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0", 2)))
    {
        output = PHY_LDO_CTRL0_LINREG_OUTPUT_TRG::_0;
    }
    else if ((result = !strncmp(data, "_16", 3)))
    {
        output = PHY_LDO_CTRL0_LINREG_OUTPUT_TRG::_16;
    }
    else if ((result = !strncmp(data, "_31", 3)))
    {
        output = PHY_LDO_CTRL0_LINREG_OUTPUT_TRG::_31;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
