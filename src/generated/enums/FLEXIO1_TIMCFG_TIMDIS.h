/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class FLEXIO1_TIMCFG_TIMDIS : uint8_t
{
    never /*!< Timer never disabled */,
    tmr_nminus1 = 1 /*!< Timer disabled on Timer N-1 disable */,
    tmr_cmp = 2 /*!< Timer disabled on Timer compare (upper 8-bits match and
                   decrement) */
        ,
    tmr_cmp_triglow = 3 /*!< Timer disabled on Timer compare (upper 8-bits
                           match and decrement) and Trigger Low */
        ,
    pin_edge = 4 /*!< Timer disabled on Pin rising or falling edge */,
    pin_edge_trighi = 5 /*!< Timer disabled on Pin rising or falling edge
                           provided Trigger is high */
        ,
    trig_falledge = 6 /*!< Timer disabled on Trigger falling edge */
};
static_assert(sizeof(FLEXIO1_TIMCFG_TIMDIS) == 1);

/**
 * Converts FLEXIO1_TIMCFG_TIMDIS to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(FLEXIO1_TIMCFG_TIMDIS instance)
{
    const char *result = "UNKNOWN FLEXIO1_TIMCFG_TIMDIS";

    switch (instance)
    {
    case FLEXIO1_TIMCFG_TIMDIS::never:
        result = "never";
        break;
    case FLEXIO1_TIMCFG_TIMDIS::tmr_nminus1:
        result = "tmr_nminus1";
        break;
    case FLEXIO1_TIMCFG_TIMDIS::tmr_cmp:
        result = "tmr_cmp";
        break;
    case FLEXIO1_TIMCFG_TIMDIS::tmr_cmp_triglow:
        result = "tmr_cmp_triglow";
        break;
    case FLEXIO1_TIMCFG_TIMDIS::pin_edge:
        result = "pin_edge";
        break;
    case FLEXIO1_TIMCFG_TIMDIS::pin_edge_trighi:
        result = "pin_edge_trighi";
        break;
    case FLEXIO1_TIMCFG_TIMDIS::trig_falledge:
        result = "trig_falledge";
        break;
    }

    return result;
}

/**
 * Converts a C string to FLEXIO1_TIMCFG_TIMDIS.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, FLEXIO1_TIMCFG_TIMDIS &output)
{
    bool result = false;

    if ((result = !strncmp(data, "never", 5)))
    {
        output = FLEXIO1_TIMCFG_TIMDIS::never;
    }
    else if ((result = !strncmp(data, "tmr_nminus1", 11)))
    {
        output = FLEXIO1_TIMCFG_TIMDIS::tmr_nminus1;
    }
    else if ((result = !strncmp(data, "tmr_cmp", 7)))
    {
        output = FLEXIO1_TIMCFG_TIMDIS::tmr_cmp;
    }
    else if ((result = !strncmp(data, "tmr_cmp_triglow", 15)))
    {
        output = FLEXIO1_TIMCFG_TIMDIS::tmr_cmp_triglow;
    }
    else if ((result = !strncmp(data, "pin_edge", 8)))
    {
        output = FLEXIO1_TIMCFG_TIMDIS::pin_edge;
    }
    else if ((result = !strncmp(data, "pin_edge_trighi", 15)))
    {
        output = FLEXIO1_TIMCFG_TIMDIS::pin_edge_trighi;
    }
    else if ((result = !strncmp(data, "trig_falledge", 13)))
    {
        output = FLEXIO1_TIMCFG_TIMDIS::trig_falledge;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
