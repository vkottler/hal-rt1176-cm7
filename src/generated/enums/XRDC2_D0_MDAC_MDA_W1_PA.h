/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class XRDC2_D0_MDAC_MDA_W1_PA : uint8_t
{
    _00 /*!< Use the bus master's privileged/user attribute directly. */,
    _01 = 1 /*!< Use the bus master's privileged/user attribute directly. */,
    _10 = 2 /*!< Force the bus attribute for this master to user. */,
    _11 = 3 /*!< Force the bus attribute for this master to privileged. */
};
static_assert(sizeof(XRDC2_D0_MDAC_MDA_W1_PA) == 1);

/**
 * Converts XRDC2_D0_MDAC_MDA_W1_PA to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(XRDC2_D0_MDAC_MDA_W1_PA instance)
{
    const char *result = "UNKNOWN XRDC2_D0_MDAC_MDA_W1_PA";

    switch (instance)
    {
    case XRDC2_D0_MDAC_MDA_W1_PA::_00:
        result = "_00";
        break;
    case XRDC2_D0_MDAC_MDA_W1_PA::_01:
        result = "_01";
        break;
    case XRDC2_D0_MDAC_MDA_W1_PA::_10:
        result = "_10";
        break;
    case XRDC2_D0_MDAC_MDA_W1_PA::_11:
        result = "_11";
        break;
    }

    return result;
}

/**
 * Converts a C string to XRDC2_D0_MDAC_MDA_W1_PA.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, XRDC2_D0_MDAC_MDA_W1_PA &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_00", 3)))
    {
        output = XRDC2_D0_MDAC_MDA_W1_PA::_00;
    }
    else if ((result = !strncmp(data, "_01", 3)))
    {
        output = XRDC2_D0_MDAC_MDA_W1_PA::_01;
    }
    else if ((result = !strncmp(data, "_10", 3)))
    {
        output = XRDC2_D0_MDAC_MDA_W1_PA::_10;
    }
    else if ((result = !strncmp(data, "_11", 3)))
    {
        output = XRDC2_D0_MDAC_MDA_W1_PA::_11;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
