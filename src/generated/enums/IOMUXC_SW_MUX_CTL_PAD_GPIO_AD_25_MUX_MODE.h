/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE : uint8_t
{
    _0_lpuart1_RX /*!< Select mux mode: ALT0 mux port: LPUART1_RXD of instance:
                     LPUART1 */
        ,
    _1_lpspi2_PCS0 = 1 /*!< Select mux mode: ALT1 mux port: LPSPI2_PCS0 of
                          instance: LPSPI2 */
        ,
    _2_video_mux_CSI_DATA1 =
        2 /*!< Select mux mode: ALT2 mux port: VIDEO_MUX_CSI_DATA01 of
             instance: VIDEO_MUX */
        ,
    _3_enet_RX_ER =
        3 /*!< Select mux mode: ALT3 mux port: ENET_RX_ER of instance: ENET */,
    _4_flexpwm2_PWMB0 = 4 /*!< Select mux mode: ALT4 mux port: FLEXPWM2_PWM0_B
                             of instance: FLEXPWM2 */
        ,
    _5_gpio_mux3_IO24 = 5 /*!< Select mux mode: ALT5 mux port: GPIO_MUX3_IO24
                             of instance: GPIO_MUX3 */
        ,
    _6_kpp_COL5 =
        6 /*!< Select mux mode: ALT6 mux port: KPP_COL05 of instance: KPP */,
    _8_flexio2_FLEXIO25 = 8 /*!< Select mux mode: ALT8 mux port: FLEXIO2_D25 of
                               instance: FLEXIO2 */
        ,
    _9_lpi2c4_SDA = 9 /*!< Select mux mode: ALT9 mux port: LPI2C4_SDA of
                         instance: LPI2C4 */
        ,
    _10_gpio9_IO24 = 10 /*!< Select mux mode: ALT10 mux port: GPIO9_IO24 of
                           instance: GPIO9 */
};
static_assert(sizeof(IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE) == 1);

/**
 * Converts IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(
    IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE instance)
{
    const char *result = "UNKNOWN IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE";

    switch (instance)
    {
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE::_0_lpuart1_RX:
        result = "_0_lpuart1_RX";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE::_1_lpspi2_PCS0:
        result = "_1_lpspi2_PCS0";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE::_2_video_mux_CSI_DATA1:
        result = "_2_video_mux_CSI_DATA1";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE::_3_enet_RX_ER:
        result = "_3_enet_RX_ER";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE::_4_flexpwm2_PWMB0:
        result = "_4_flexpwm2_PWMB0";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE::_5_gpio_mux3_IO24:
        result = "_5_gpio_mux3_IO24";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE::_6_kpp_COL5:
        result = "_6_kpp_COL5";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE::_8_flexio2_FLEXIO25:
        result = "_8_flexio2_FLEXIO25";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE::_9_lpi2c4_SDA:
        result = "_9_lpi2c4_SDA";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE::_10_gpio9_IO24:
        result = "_10_gpio9_IO24";
        break;
    }

    return result;
}

/**
 * Converts a C string to IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0_lpuart1_RX", 13)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE::_0_lpuart1_RX;
    }
    else if ((result = !strncmp(data, "_1_lpspi2_PCS0", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE::_1_lpspi2_PCS0;
    }
    else if ((result = !strncmp(data, "_2_video_mux_CSI_DATA1", 22)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE::_2_video_mux_CSI_DATA1;
    }
    else if ((result = !strncmp(data, "_3_enet_RX_ER", 13)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE::_3_enet_RX_ER;
    }
    else if ((result = !strncmp(data, "_4_flexpwm2_PWMB0", 17)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE::_4_flexpwm2_PWMB0;
    }
    else if ((result = !strncmp(data, "_5_gpio_mux3_IO24", 17)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE::_5_gpio_mux3_IO24;
    }
    else if ((result = !strncmp(data, "_6_kpp_COL5", 11)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE::_6_kpp_COL5;
    }
    else if ((result = !strncmp(data, "_8_flexio2_FLEXIO25", 19)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE::_8_flexio2_FLEXIO25;
    }
    else if ((result = !strncmp(data, "_9_lpi2c4_SDA", 13)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE::_9_lpi2c4_SDA;
    }
    else if ((result = !strncmp(data, "_10_gpio9_IO24", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_25_MUX_MODE::_10_gpio9_IO24;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
