/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE : uint8_t
{
    _0_lpuart1_RTS_B /*!< Select mux mode: ALT0 mux port: LPUART1_RTS_B of
                        instance: LPUART1 */
        ,
    _1_lpspi2_SDI = 1 /*!< Select mux mode: ALT1 mux port: LPSPI2_SIN of
                         instance: LPSPI2 */
        ,
    _2_semc_CSX2 =
        2 /*!< Select mux mode: ALT2 mux port: SEMC_CSX02 of instance: SEMC */,
    _3_ENET_RX_DATA1 = 3 /*!< Select mux mode: ALT3 mux port: ENET_RX_DATA01 of
                            instance: ENET */
        ,
    _4_flexpwm2_PWMB1 = 4 /*!< Select mux mode: ALT4 mux port: FLEXPWM2_PWM1_B
                             of instance: FLEXPWM2 */
        ,
    _5_gpio_mux3_IO26 = 5 /*!< Select mux mode: ALT5 mux port: GPIO_MUX3_IO26
                             of instance: GPIO_MUX3 */
        ,
    _6_kpp_COL4 =
        6 /*!< Select mux mode: ALT6 mux port: KPP_COL04 of instance: KPP */,
    _8_flexio2_FLEXIO27 = 8 /*!< Select mux mode: ALT8 mux port: FLEXIO2_D27 of
                               instance: FLEXIO2 */
        ,
    _9_enet_qos_MDIO = 9 /*!< Select mux mode: ALT9 mux port: ENET_QOS_MDIO of
                            instance: ENET_QOS */
        ,
    _10_gpio9_IO26 = 10 /*!< Select mux mode: ALT10 mux port: GPIO9_IO26 of
                           instance: GPIO9 */
        ,
    _11_usdhc2_WP = 11 /*!< Select mux mode: ALT11 mux port: USDHC2_WP of
                          instance: USDHC2 */
};
static_assert(sizeof(IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE) == 1);

/**
 * Converts IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(
    IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE instance)
{
    const char *result = "UNKNOWN IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE";

    switch (instance)
    {
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE::_0_lpuart1_RTS_B:
        result = "_0_lpuart1_RTS_B";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE::_1_lpspi2_SDI:
        result = "_1_lpspi2_SDI";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE::_2_semc_CSX2:
        result = "_2_semc_CSX2";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE::_3_ENET_RX_DATA1:
        result = "_3_ENET_RX_DATA1";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE::_4_flexpwm2_PWMB1:
        result = "_4_flexpwm2_PWMB1";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE::_5_gpio_mux3_IO26:
        result = "_5_gpio_mux3_IO26";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE::_6_kpp_COL4:
        result = "_6_kpp_COL4";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE::_8_flexio2_FLEXIO27:
        result = "_8_flexio2_FLEXIO27";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE::_9_enet_qos_MDIO:
        result = "_9_enet_qos_MDIO";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE::_10_gpio9_IO26:
        result = "_10_gpio9_IO26";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE::_11_usdhc2_WP:
        result = "_11_usdhc2_WP";
        break;
    }

    return result;
}

/**
 * Converts a C string to IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0_lpuart1_RTS_B", 16)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE::_0_lpuart1_RTS_B;
    }
    else if ((result = !strncmp(data, "_1_lpspi2_SDI", 13)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE::_1_lpspi2_SDI;
    }
    else if ((result = !strncmp(data, "_2_semc_CSX2", 12)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE::_2_semc_CSX2;
    }
    else if ((result = !strncmp(data, "_3_ENET_RX_DATA1", 16)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE::_3_ENET_RX_DATA1;
    }
    else if ((result = !strncmp(data, "_4_flexpwm2_PWMB1", 17)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE::_4_flexpwm2_PWMB1;
    }
    else if ((result = !strncmp(data, "_5_gpio_mux3_IO26", 17)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE::_5_gpio_mux3_IO26;
    }
    else if ((result = !strncmp(data, "_6_kpp_COL4", 11)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE::_6_kpp_COL4;
    }
    else if ((result = !strncmp(data, "_8_flexio2_FLEXIO27", 19)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE::_8_flexio2_FLEXIO27;
    }
    else if ((result = !strncmp(data, "_9_enet_qos_MDIO", 16)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE::_9_enet_qos_MDIO;
    }
    else if ((result = !strncmp(data, "_10_gpio9_IO26", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE::_10_gpio9_IO26;
    }
    else if ((result = !strncmp(data, "_11_usdhc2_WP", 13)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_27_MUX_MODE::_11_usdhc2_WP;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
