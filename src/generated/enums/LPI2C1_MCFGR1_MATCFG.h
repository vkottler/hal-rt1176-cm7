/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class LPI2C1_MCFGR1_MATCFG : uint8_t
{
    DISABLED /*!< Match is disabled */,
    FIRST_DATA_WORD_EQUALS_MATCH0_OR_MATCH1 =
        2 /*!< Match is enabled (1st data word equals MDMR[MATCH0] OR
             MDMR[MATCH1]) */
        ,
    ANY_DATA_WORD_EQUALS_MATCH0_OR_MATCH1 =
        3 /*!< Match is enabled (any data word equals MDMR[MATCH0] OR
             MDMR[MATCH1]) */
        ,
    FIRST_DATA_WORD_MATCH0_AND_SECOND_DATA_WORD_MATCH1 =
        4 /*!< Match is enabled (1st data word equals MDMR[MATCH0] AND 2nd data
             word equals MDMR[MATCH1) */
        ,
    ANY_DATA_WORD_MATCH0_NEXT_DATA_WORD_MATCH1 =
        5 /*!< Match is enabled (any data word equals MDMR[MATCH0] AND next
             data word equals MDMR[MATCH1) */
        ,
    FIRST_DATA_WORD_AND_MATCH1_EQUALS_MATCH0_AND__cont =
        6 /*!< Match is enabled (1st data word AND MDMR[MATCH1] equals
             MDMR[MATCH0] AND MDMR[MATCH1]) */
        ,
    ANY_DATA_WORD_AND_MATCH1_EQUALS_MATCH0_AND_MATCH1 =
        7 /*!< Match is enabled (any data word AND MDMR[MATCH1] equals
             MDMR[MATCH0] AND MDMR[MATCH1]) */
};
static_assert(sizeof(LPI2C1_MCFGR1_MATCFG) == 1);

/**
 * Converts LPI2C1_MCFGR1_MATCFG to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(LPI2C1_MCFGR1_MATCFG instance)
{
    const char *result = "UNKNOWN LPI2C1_MCFGR1_MATCFG";

    switch (instance)
    {
    case LPI2C1_MCFGR1_MATCFG::DISABLED:
        result = "DISABLED";
        break;
    case LPI2C1_MCFGR1_MATCFG::FIRST_DATA_WORD_EQUALS_MATCH0_OR_MATCH1:
        result = "FIRST_DATA_WORD_EQUALS_MATCH0_OR_MATCH1";
        break;
    case LPI2C1_MCFGR1_MATCFG::ANY_DATA_WORD_EQUALS_MATCH0_OR_MATCH1:
        result = "ANY_DATA_WORD_EQUALS_MATCH0_OR_MATCH1";
        break;
    case LPI2C1_MCFGR1_MATCFG::
        FIRST_DATA_WORD_MATCH0_AND_SECOND_DATA_WORD_MATCH1:
        result = "FIRST_DATA_WORD_MATCH0_AND_SECOND_DATA_WORD_MATCH1";
        break;
    case LPI2C1_MCFGR1_MATCFG::ANY_DATA_WORD_MATCH0_NEXT_DATA_WORD_MATCH1:
        result = "ANY_DATA_WORD_MATCH0_NEXT_DATA_WORD_MATCH1";
        break;
    case LPI2C1_MCFGR1_MATCFG::
        FIRST_DATA_WORD_AND_MATCH1_EQUALS_MATCH0_AND__cont:
        result = "FIRST_DATA_WORD_AND_MATCH1_EQUALS_MATCH0_AND__cont";
        break;
    case LPI2C1_MCFGR1_MATCFG::
        ANY_DATA_WORD_AND_MATCH1_EQUALS_MATCH0_AND_MATCH1:
        result = "ANY_DATA_WORD_AND_MATCH1_EQUALS_MATCH0_AND_MATCH1";
        break;
    }

    return result;
}

/**
 * Converts a C string to LPI2C1_MCFGR1_MATCFG.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, LPI2C1_MCFGR1_MATCFG &output)
{
    bool result = false;

    if ((result = !strncmp(data, "DISABLED", 8)))
    {
        output = LPI2C1_MCFGR1_MATCFG::DISABLED;
    }
    else if ((result = !strncmp(
                  data, "FIRST_DATA_WORD_EQUALS_MATCH0_OR_MATCH1", 39)))
    {
        output = LPI2C1_MCFGR1_MATCFG::FIRST_DATA_WORD_EQUALS_MATCH0_OR_MATCH1;
    }
    else if ((result =
                  !strncmp(data, "ANY_DATA_WORD_EQUALS_MATCH0_OR_MATCH1", 37)))
    {
        output = LPI2C1_MCFGR1_MATCFG::ANY_DATA_WORD_EQUALS_MATCH0_OR_MATCH1;
    }
    else if ((result = !strncmp(
                  data, "FIRST_DATA_WORD_MATCH0_AND_SECOND_DATA_WORD_MATCH1",
                  50)))
    {
        output = LPI2C1_MCFGR1_MATCFG::
            FIRST_DATA_WORD_MATCH0_AND_SECOND_DATA_WORD_MATCH1;
    }
    else if ((result = !strncmp(
                  data, "ANY_DATA_WORD_MATCH0_NEXT_DATA_WORD_MATCH1", 42)))
    {
        output =
            LPI2C1_MCFGR1_MATCFG::ANY_DATA_WORD_MATCH0_NEXT_DATA_WORD_MATCH1;
    }
    else if ((result = !strncmp(
                  data, "FIRST_DATA_WORD_AND_MATCH1_EQUALS_MATCH0_AND__cont",
                  50)))
    {
        output = LPI2C1_MCFGR1_MATCFG::
            FIRST_DATA_WORD_AND_MATCH1_EQUALS_MATCH0_AND__cont;
    }
    else if ((result = !strncmp(
                  data, "ANY_DATA_WORD_AND_MATCH1_EQUALS_MATCH0_AND_MATCH1",
                  49)))
    {
        output = LPI2C1_MCFGR1_MATCFG::
            ANY_DATA_WORD_AND_MATCH1_EQUALS_MATCH0_AND_MATCH1;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
