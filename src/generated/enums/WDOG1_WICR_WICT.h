/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class WDOG1_WICR_WICT : uint8_t
{
    _0 /*!< WICT[7:0] = Time duration between interrupt and time-out is 0
          seconds. */
        ,
    _1 = 1 /*!< WICT[7:0] = Time duration between interrupt and time-out is 0.5
              seconds. */
        ,
    _4 = 4 /*!< WICT[7:0] = Time duration between interrupt and time-out is 2
              seconds (Default). */
        ,
    _255 = 255 /*!< WICT[7:0] = Time duration between interrupt and time-out is
                  127.5 seconds. */
};
static_assert(sizeof(WDOG1_WICR_WICT) == 1);

/**
 * Converts WDOG1_WICR_WICT to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(WDOG1_WICR_WICT instance)
{
    const char *result = "UNKNOWN WDOG1_WICR_WICT";

    switch (instance)
    {
    case WDOG1_WICR_WICT::_0:
        result = "_0";
        break;
    case WDOG1_WICR_WICT::_1:
        result = "_1";
        break;
    case WDOG1_WICR_WICT::_4:
        result = "_4";
        break;
    case WDOG1_WICR_WICT::_255:
        result = "_255";
        break;
    }

    return result;
}

/**
 * Converts a C string to WDOG1_WICR_WICT.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, WDOG1_WICR_WICT &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0", 2)))
    {
        output = WDOG1_WICR_WICT::_0;
    }
    else if ((result = !strncmp(data, "_1", 2)))
    {
        output = WDOG1_WICR_WICT::_1;
    }
    else if ((result = !strncmp(data, "_4", 2)))
    {
        output = WDOG1_WICR_WICT::_4;
    }
    else if ((result = !strncmp(data, "_255", 4)))
    {
        output = WDOG1_WICR_WICT::_255;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
