/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class MUA_CR_Fn : uint8_t
{
    not_appl /*!< N/A. Self clearing bit (default). */,
    assert_reset = 1 /*!< Asserts the Processor A MU reset. */
};
static_assert(sizeof(MUA_CR_Fn) == 1);

/**
 * Converts MUA_CR_Fn to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(MUA_CR_Fn instance)
{
    const char *result = "UNKNOWN MUA_CR_Fn";

    switch (instance)
    {
    case MUA_CR_Fn::not_appl:
        result = "not_appl";
        break;
    case MUA_CR_Fn::assert_reset:
        result = "assert_reset";
        break;
    }

    return result;
}

/**
 * Converts a C string to MUA_CR_Fn.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, MUA_CR_Fn &output)
{
    bool result = false;

    if ((result = !strncmp(data, "not_appl", 8)))
    {
        output = MUA_CR_Fn::not_appl;
    }
    else if ((result = !strncmp(data, "assert_reset", 12)))
    {
        output = MUA_CR_Fn::assert_reset;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
