/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class TMR1_SCTRL0_CAPTURE_MODE : uint8_t
{
    DISABLED /*!< Capture function is disabled */,
    ENABLE_RISING = 1 /*!< Load capture register on rising edge (when IPS=0) or
                         falling edge (when IPS=1) of input */
        ,
    ENABLE_FALLING = 2 /*!< Load capture register on falling edge (when IPS=0)
                          or rising edge (when IPS=1) of input */
        ,
    ENABLE_BOTH = 3 /*!< Load capture register on both edges of input */
};
static_assert(sizeof(TMR1_SCTRL0_CAPTURE_MODE) == 1);

/**
 * Converts TMR1_SCTRL0_CAPTURE_MODE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(TMR1_SCTRL0_CAPTURE_MODE instance)
{
    const char *result = "UNKNOWN TMR1_SCTRL0_CAPTURE_MODE";

    switch (instance)
    {
    case TMR1_SCTRL0_CAPTURE_MODE::DISABLED:
        result = "DISABLED";
        break;
    case TMR1_SCTRL0_CAPTURE_MODE::ENABLE_RISING:
        result = "ENABLE_RISING";
        break;
    case TMR1_SCTRL0_CAPTURE_MODE::ENABLE_FALLING:
        result = "ENABLE_FALLING";
        break;
    case TMR1_SCTRL0_CAPTURE_MODE::ENABLE_BOTH:
        result = "ENABLE_BOTH";
        break;
    }

    return result;
}

/**
 * Converts a C string to TMR1_SCTRL0_CAPTURE_MODE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, TMR1_SCTRL0_CAPTURE_MODE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "DISABLED", 8)))
    {
        output = TMR1_SCTRL0_CAPTURE_MODE::DISABLED;
    }
    else if ((result = !strncmp(data, "ENABLE_RISING", 13)))
    {
        output = TMR1_SCTRL0_CAPTURE_MODE::ENABLE_RISING;
    }
    else if ((result = !strncmp(data, "ENABLE_FALLING", 14)))
    {
        output = TMR1_SCTRL0_CAPTURE_MODE::ENABLE_FALLING;
    }
    else if ((result = !strncmp(data, "ENABLE_BOTH", 11)))
    {
        output = TMR1_SCTRL0_CAPTURE_MODE::ENABLE_BOTH;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
