/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class USBPHY1_PLL_SIC_PLL_DIV_SEL : uint8_t
{
    _13 /*!< Divide by 13 */,
    _15 = 1 /*!< Divide by 15 */,
    _16 = 2 /*!< Divide by 16 */,
    _20 = 3 /*!< Divide by 20 */,
    _22 = 4 /*!< Divide by 22 */,
    _25 = 5 /*!< Divide by 25 */,
    _30 = 6 /*!< Divide by 30 */,
    _240 = 7 /*!< Divide by 240 */
};
static_assert(sizeof(USBPHY1_PLL_SIC_PLL_DIV_SEL) == 1);

/**
 * Converts USBPHY1_PLL_SIC_PLL_DIV_SEL to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USBPHY1_PLL_SIC_PLL_DIV_SEL instance)
{
    const char *result = "UNKNOWN USBPHY1_PLL_SIC_PLL_DIV_SEL";

    switch (instance)
    {
    case USBPHY1_PLL_SIC_PLL_DIV_SEL::_13:
        result = "_13";
        break;
    case USBPHY1_PLL_SIC_PLL_DIV_SEL::_15:
        result = "_15";
        break;
    case USBPHY1_PLL_SIC_PLL_DIV_SEL::_16:
        result = "_16";
        break;
    case USBPHY1_PLL_SIC_PLL_DIV_SEL::_20:
        result = "_20";
        break;
    case USBPHY1_PLL_SIC_PLL_DIV_SEL::_22:
        result = "_22";
        break;
    case USBPHY1_PLL_SIC_PLL_DIV_SEL::_25:
        result = "_25";
        break;
    case USBPHY1_PLL_SIC_PLL_DIV_SEL::_30:
        result = "_30";
        break;
    case USBPHY1_PLL_SIC_PLL_DIV_SEL::_240:
        result = "_240";
        break;
    }

    return result;
}

/**
 * Converts a C string to USBPHY1_PLL_SIC_PLL_DIV_SEL.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USBPHY1_PLL_SIC_PLL_DIV_SEL &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_13", 3)))
    {
        output = USBPHY1_PLL_SIC_PLL_DIV_SEL::_13;
    }
    else if ((result = !strncmp(data, "_15", 3)))
    {
        output = USBPHY1_PLL_SIC_PLL_DIV_SEL::_15;
    }
    else if ((result = !strncmp(data, "_16", 3)))
    {
        output = USBPHY1_PLL_SIC_PLL_DIV_SEL::_16;
    }
    else if ((result = !strncmp(data, "_20", 3)))
    {
        output = USBPHY1_PLL_SIC_PLL_DIV_SEL::_20;
    }
    else if ((result = !strncmp(data, "_22", 3)))
    {
        output = USBPHY1_PLL_SIC_PLL_DIV_SEL::_22;
    }
    else if ((result = !strncmp(data, "_25", 3)))
    {
        output = USBPHY1_PLL_SIC_PLL_DIV_SEL::_25;
    }
    else if ((result = !strncmp(data, "_30", 3)))
    {
        output = USBPHY1_PLL_SIC_PLL_DIV_SEL::_30;
    }
    else if ((result = !strncmp(data, "_240", 4)))
    {
        output = USBPHY1_PLL_SIC_PLL_DIV_SEL::_240;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
