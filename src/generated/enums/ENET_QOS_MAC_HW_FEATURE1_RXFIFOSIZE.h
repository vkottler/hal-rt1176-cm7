/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE : uint8_t
{
    _128B /*!< 128 bytes */,
    _256B = 1 /*!< 256 bytes */,
    _512B = 2 /*!< 512 bytes */,
    _1024B = 3 /*!< 1024 bytes */,
    _2048B = 4 /*!< 2048 bytes */,
    _4096B = 5 /*!< 4096 bytes */,
    _8192B = 6 /*!< 8192 bytes */,
    _16384B = 7 /*!< 16384 bytes */,
    _32KB = 8 /*!< 32 KB */,
    _64KB = 9 /*!< 64 KB */,
    _128KB = 10 /*!< 128 KB */,
    _256KB = 11 /*!< 256 KB */
};
static_assert(sizeof(ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE) == 1);

/**
 * Converts ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE instance)
{
    const char *result = "UNKNOWN ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE";

    switch (instance)
    {
    case ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE::_128B:
        result = "_128B";
        break;
    case ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE::_256B:
        result = "_256B";
        break;
    case ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE::_512B:
        result = "_512B";
        break;
    case ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE::_1024B:
        result = "_1024B";
        break;
    case ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE::_2048B:
        result = "_2048B";
        break;
    case ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE::_4096B:
        result = "_4096B";
        break;
    case ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE::_8192B:
        result = "_8192B";
        break;
    case ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE::_16384B:
        result = "_16384B";
        break;
    case ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE::_32KB:
        result = "_32KB";
        break;
    case ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE::_64KB:
        result = "_64KB";
        break;
    case ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE::_128KB:
        result = "_128KB";
        break;
    case ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE::_256KB:
        result = "_256KB";
        break;
    }

    return result;
}

/**
 * Converts a C string to ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_128B", 5)))
    {
        output = ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE::_128B;
    }
    else if ((result = !strncmp(data, "_256B", 5)))
    {
        output = ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE::_256B;
    }
    else if ((result = !strncmp(data, "_512B", 5)))
    {
        output = ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE::_512B;
    }
    else if ((result = !strncmp(data, "_1024B", 6)))
    {
        output = ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE::_1024B;
    }
    else if ((result = !strncmp(data, "_2048B", 6)))
    {
        output = ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE::_2048B;
    }
    else if ((result = !strncmp(data, "_4096B", 6)))
    {
        output = ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE::_4096B;
    }
    else if ((result = !strncmp(data, "_8192B", 6)))
    {
        output = ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE::_8192B;
    }
    else if ((result = !strncmp(data, "_16384B", 7)))
    {
        output = ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE::_16384B;
    }
    else if ((result = !strncmp(data, "_32KB", 5)))
    {
        output = ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE::_32KB;
    }
    else if ((result = !strncmp(data, "_64KB", 5)))
    {
        output = ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE::_64KB;
    }
    else if ((result = !strncmp(data, "_128KB", 6)))
    {
        output = ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE::_128KB;
    }
    else if ((result = !strncmp(data, "_256KB", 6)))
    {
        output = ENET_QOS_MAC_HW_FEATURE1_RXFIFOSIZE::_256KB;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
