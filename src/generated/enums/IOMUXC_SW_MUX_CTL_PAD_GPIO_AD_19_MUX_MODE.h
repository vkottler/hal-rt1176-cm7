/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE : uint8_t
{
    _0_sai1_RX_BCLK /*!< Select mux mode: ALT0 mux port: SAI1_RX_BCLK of
                       instance: SAI1 */
        ,
    _1_ACMP3_OUT =
        1 /*!< Select mux mode: ALT1 mux port: ACMP3_OUT of instance: ACMP3 */,
    _2_lpspi1_PCS2 = 2 /*!< Select mux mode: ALT2 mux port: LPSPI1_PCS2 of
                          instance: LPSPI1 */
        ,
    _3_flexspi1_A_SCLK = 3 /*!< Select mux mode: ALT3 mux port: FLEXSPI1_A_SCLK
                              of instance: FLEXSPI1 */
        ,
    _4_video_mux_CSI_DATA6 =
        4 /*!< Select mux mode: ALT4 mux port: VIDEO_MUX_CSI_DATA06 of
             instance: VIDEO_MUX */
        ,
    _5_gpio_mux3_IO18 = 5 /*!< Select mux mode: ALT5 mux port: GPIO_MUX3_IO18
                             of instance: GPIO_MUX3 */
        ,
    _6_enet_COL =
        6 /*!< Select mux mode: ALT6 mux port: ENET_COL of instance: ENET */,
    _8_flexio2_FLEXIO19 = 8 /*!< Select mux mode: ALT8 mux port: FLEXIO2_D19 of
                               instance: FLEXIO2 */
        ,
    _9_lpi2c2_SDA = 9 /*!< Select mux mode: ALT9 mux port: LPI2C2_SDA of
                         instance: LPI2C2 */
        ,
    _10_gpio9_IO18 = 10 /*!< Select mux mode: ALT10 mux port: GPIO9_IO18 of
                           instance: GPIO9 */
        ,
    _11_flexpwm4_PWMX1 = 11 /*!< Select mux mode: ALT11 mux port:
                               FLEXPWM4_PWM1_X of instance: FLEXPWM4 */
};
static_assert(sizeof(IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE) == 1);

/**
 * Converts IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(
    IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE instance)
{
    const char *result = "UNKNOWN IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE";

    switch (instance)
    {
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE::_0_sai1_RX_BCLK:
        result = "_0_sai1_RX_BCLK";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE::_1_ACMP3_OUT:
        result = "_1_ACMP3_OUT";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE::_2_lpspi1_PCS2:
        result = "_2_lpspi1_PCS2";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE::_3_flexspi1_A_SCLK:
        result = "_3_flexspi1_A_SCLK";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE::_4_video_mux_CSI_DATA6:
        result = "_4_video_mux_CSI_DATA6";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE::_5_gpio_mux3_IO18:
        result = "_5_gpio_mux3_IO18";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE::_6_enet_COL:
        result = "_6_enet_COL";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE::_8_flexio2_FLEXIO19:
        result = "_8_flexio2_FLEXIO19";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE::_9_lpi2c2_SDA:
        result = "_9_lpi2c2_SDA";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE::_10_gpio9_IO18:
        result = "_10_gpio9_IO18";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE::_11_flexpwm4_PWMX1:
        result = "_11_flexpwm4_PWMX1";
        break;
    }

    return result;
}

/**
 * Converts a C string to IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0_sai1_RX_BCLK", 15)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE::_0_sai1_RX_BCLK;
    }
    else if ((result = !strncmp(data, "_1_ACMP3_OUT", 12)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE::_1_ACMP3_OUT;
    }
    else if ((result = !strncmp(data, "_2_lpspi1_PCS2", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE::_2_lpspi1_PCS2;
    }
    else if ((result = !strncmp(data, "_3_flexspi1_A_SCLK", 18)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE::_3_flexspi1_A_SCLK;
    }
    else if ((result = !strncmp(data, "_4_video_mux_CSI_DATA6", 22)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE::_4_video_mux_CSI_DATA6;
    }
    else if ((result = !strncmp(data, "_5_gpio_mux3_IO18", 17)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE::_5_gpio_mux3_IO18;
    }
    else if ((result = !strncmp(data, "_6_enet_COL", 11)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE::_6_enet_COL;
    }
    else if ((result = !strncmp(data, "_8_flexio2_FLEXIO19", 19)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE::_8_flexio2_FLEXIO19;
    }
    else if ((result = !strncmp(data, "_9_lpi2c2_SDA", 13)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE::_9_lpi2c2_SDA;
    }
    else if ((result = !strncmp(data, "_10_gpio9_IO18", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE::_10_gpio9_IO18;
    }
    else if ((result = !strncmp(data, "_11_flexpwm4_PWMX1", 18)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_19_MUX_MODE::_11_flexpwm4_PWMX1;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
