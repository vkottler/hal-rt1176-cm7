/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class USBPHY1_RX_ENVADJ : uint8_t
{
    _1 /*!< Trip-Level Voltage is 0.1000 V */,
    _1125 = 1 /*!< Trip-Level Voltage is 0.1125 V */,
    _1250 = 2 /*!< Trip-Level Voltage is 0.1250 V */,
    _0875 = 3 /*!< Trip-Level Voltage is 0.0875 V */
};
static_assert(sizeof(USBPHY1_RX_ENVADJ) == 1);

/**
 * Converts USBPHY1_RX_ENVADJ to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USBPHY1_RX_ENVADJ instance)
{
    const char *result = "UNKNOWN USBPHY1_RX_ENVADJ";

    switch (instance)
    {
    case USBPHY1_RX_ENVADJ::_1:
        result = "_1";
        break;
    case USBPHY1_RX_ENVADJ::_1125:
        result = "_1125";
        break;
    case USBPHY1_RX_ENVADJ::_1250:
        result = "_1250";
        break;
    case USBPHY1_RX_ENVADJ::_0875:
        result = "_0875";
        break;
    }

    return result;
}

/**
 * Converts a C string to USBPHY1_RX_ENVADJ.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USBPHY1_RX_ENVADJ &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_1", 2)))
    {
        output = USBPHY1_RX_ENVADJ::_1;
    }
    else if ((result = !strncmp(data, "_1125", 5)))
    {
        output = USBPHY1_RX_ENVADJ::_1125;
    }
    else if ((result = !strncmp(data, "_1250", 5)))
    {
        output = USBPHY1_RX_ENVADJ::_1250;
    }
    else if ((result = !strncmp(data, "_0875", 5)))
    {
        output = USBPHY1_RX_ENVADJ::_0875;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
