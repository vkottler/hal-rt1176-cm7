/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_13_MUX_MODE : uint8_t
{
    _0_jtag_mux_MOD /*!< Select mux mode: ALT0 mux port: JTAG_MUX_MOD of
                       instance: JTAG_MUX */
        ,
    _1_mic_BITSTREAM1 = 1 /*!< Select mux mode: ALT1 mux port: MIC_BITSTREAM1
                             of instance: MIC */
        ,
    _2_pit2_TRIGGER1 = 2 /*!< Select mux mode: ALT2 mux port: PIT2_TRIGGER1 of
                            instance: PIT2 */
        ,
    _5_gpio_mux6_IO13 = 5 /*!< Select mux mode: ALT5 mux port: GPIO_MUX6_IO13
                             of instance: GPIO_MUX6 */
        ,
    _7_sai4_RX_DATA = 7 /*!< Select mux mode: ALT7 mux port: SAI4_RX_DATA of
                           instance: SAI4 */
        ,
    _8_lpspi5_PCS0 = 8 /*!< Select mux mode: ALT8 mux port: LPSPI5_PCS0 of
                          instance: LPSPI5 */
        ,
    _10_gpio12_IO13 = 10 /*!< Select mux mode: ALT10 mux port: GPIO12_IO13 of
                            instance: GPIO12 */
};
static_assert(sizeof(IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_13_MUX_MODE) == 1);

/**
 * Converts IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_13_MUX_MODE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(
    IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_13_MUX_MODE instance)
{
    const char *result =
        "UNKNOWN IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_13_MUX_MODE";

    switch (instance)
    {
    case IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_13_MUX_MODE::_0_jtag_mux_MOD:
        result = "_0_jtag_mux_MOD";
        break;
    case IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_13_MUX_MODE::_1_mic_BITSTREAM1:
        result = "_1_mic_BITSTREAM1";
        break;
    case IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_13_MUX_MODE::_2_pit2_TRIGGER1:
        result = "_2_pit2_TRIGGER1";
        break;
    case IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_13_MUX_MODE::_5_gpio_mux6_IO13:
        result = "_5_gpio_mux6_IO13";
        break;
    case IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_13_MUX_MODE::_7_sai4_RX_DATA:
        result = "_7_sai4_RX_DATA";
        break;
    case IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_13_MUX_MODE::_8_lpspi5_PCS0:
        result = "_8_lpspi5_PCS0";
        break;
    case IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_13_MUX_MODE::_10_gpio12_IO13:
        result = "_10_gpio12_IO13";
        break;
    }

    return result;
}

/**
 * Converts a C string to IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_13_MUX_MODE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(
    const char *data, IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_13_MUX_MODE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0_jtag_mux_MOD", 15)))
    {
        output =
            IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_13_MUX_MODE::_0_jtag_mux_MOD;
    }
    else if ((result = !strncmp(data, "_1_mic_BITSTREAM1", 17)))
    {
        output = IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_13_MUX_MODE::
            _1_mic_BITSTREAM1;
    }
    else if ((result = !strncmp(data, "_2_pit2_TRIGGER1", 16)))
    {
        output =
            IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_13_MUX_MODE::_2_pit2_TRIGGER1;
    }
    else if ((result = !strncmp(data, "_5_gpio_mux6_IO13", 17)))
    {
        output = IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_13_MUX_MODE::
            _5_gpio_mux6_IO13;
    }
    else if ((result = !strncmp(data, "_7_sai4_RX_DATA", 15)))
    {
        output =
            IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_13_MUX_MODE::_7_sai4_RX_DATA;
    }
    else if ((result = !strncmp(data, "_8_lpspi5_PCS0", 14)))
    {
        output =
            IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_13_MUX_MODE::_8_lpspi5_PCS0;
    }
    else if ((result = !strncmp(data, "_10_gpio12_IO13", 15)))
    {
        output =
            IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_13_MUX_MODE::_10_gpio12_IO13;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
