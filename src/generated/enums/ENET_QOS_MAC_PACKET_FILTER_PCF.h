/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class ENET_QOS_MAC_PACKET_FILTER_PCF : uint8_t
{
    FLTR_ALL /*!< MAC filters all control packets from reaching the application
              */
        ,
    FW_XCPT_PAU =
        1 /*!< MAC forwards all control packets except Pause packets to the
             application even if they fail the Address filter */
        ,
    FW_ALL = 2 /*!< MAC forwards all control packets to the application even if
                  they fail the Address filter */
        ,
    FW_PASS =
        3 /*!< MAC forwards the control packets that pass the Address filter */
};
static_assert(sizeof(ENET_QOS_MAC_PACKET_FILTER_PCF) == 1);

/**
 * Converts ENET_QOS_MAC_PACKET_FILTER_PCF to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(ENET_QOS_MAC_PACKET_FILTER_PCF instance)
{
    const char *result = "UNKNOWN ENET_QOS_MAC_PACKET_FILTER_PCF";

    switch (instance)
    {
    case ENET_QOS_MAC_PACKET_FILTER_PCF::FLTR_ALL:
        result = "FLTR_ALL";
        break;
    case ENET_QOS_MAC_PACKET_FILTER_PCF::FW_XCPT_PAU:
        result = "FW_XCPT_PAU";
        break;
    case ENET_QOS_MAC_PACKET_FILTER_PCF::FW_ALL:
        result = "FW_ALL";
        break;
    case ENET_QOS_MAC_PACKET_FILTER_PCF::FW_PASS:
        result = "FW_PASS";
        break;
    }

    return result;
}

/**
 * Converts a C string to ENET_QOS_MAC_PACKET_FILTER_PCF.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        ENET_QOS_MAC_PACKET_FILTER_PCF &output)
{
    bool result = false;

    if ((result = !strncmp(data, "FLTR_ALL", 8)))
    {
        output = ENET_QOS_MAC_PACKET_FILTER_PCF::FLTR_ALL;
    }
    else if ((result = !strncmp(data, "FW_XCPT_PAU", 11)))
    {
        output = ENET_QOS_MAC_PACKET_FILTER_PCF::FW_XCPT_PAU;
    }
    else if ((result = !strncmp(data, "FW_ALL", 6)))
    {
        output = ENET_QOS_MAC_PACKET_FILTER_PCF::FW_ALL;
    }
    else if ((result = !strncmp(data, "FW_PASS", 7)))
    {
        output = ENET_QOS_MAC_PACKET_FILTER_PCF::FW_PASS;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
