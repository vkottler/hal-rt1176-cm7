/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE : uint8_t
{
    _0_semc_DATA21 /*!< Select mux mode: ALT0 mux port: SEMC_DATA21 of
                      instance: SEMC */
        ,
    _1_gpt3_CLK =
        1 /*!< Select mux mode: ALT1 mux port: GPT3_CLK of instance: GPT3 */,
    _2_sai2_RX_SYNC = 2 /*!< Select mux mode: ALT2 mux port: SAI2_RX_SYNC of
                           instance: SAI2 */
        ,
    _3_video_mux_CSI_DATA20 =
        3 /*!< Select mux mode: ALT3 mux port: VIDEO_MUX_CSI_DATA20 of
             instance: VIDEO_MUX */
        ,
    _4_flexspi2_B_DATA1 = 4 /*!< Select mux mode: ALT4 mux port:
                               FLEXSPI2_B_DATA01 of instance: FLEXSPI2 */
        ,
    _5_gpio_mux2_IO15 = 5 /*!< Select mux mode: ALT5 mux port: GPIO_MUX2_IO15
                             of instance: GPIO_MUX2 */
        ,
    _6_XBAR1_INOUT25 = 6 /*!< Select mux mode: ALT6 mux port: XBAR1_INOUT25 of
                            instance: XBAR1 */
        ,
    _7_enet_1g_RX_CLK = 7 /*!< Select mux mode: ALT7 mux port: ENET_1G_RX_CLK
                             of instance: ENET_1G */
        ,
    _8_lpspi3_PCS0 = 8 /*!< Select mux mode: ALT8 mux port: LPSPI3_PCS0 of
                          instance: LPSPI3 */
        ,
    _9_pit1_TRIGGER0 = 9 /*!< Select mux mode: ALT9 mux port: PIT1_TRIGGER0 of
                            instance: PIT1 */
        ,
    _10_gpio8_IO15 = 10 /*!< Select mux mode: ALT10 mux port: GPIO8_IO15 of
                           instance: GPIO8 */
        ,
    _11_flexpwm3_PWMB2 = 11 /*!< Select mux mode: ALT11 mux port:
                               FLEXPWM3_PWM2_B of instance: FLEXPWM3 */
};
static_assert(sizeof(IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE) == 1);

/**
 * Converts IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(
    IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE instance)
{
    const char *result =
        "UNKNOWN IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE";

    switch (instance)
    {
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE::_0_semc_DATA21:
        result = "_0_semc_DATA21";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE::_1_gpt3_CLK:
        result = "_1_gpt3_CLK";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE::_2_sai2_RX_SYNC:
        result = "_2_sai2_RX_SYNC";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE::
        _3_video_mux_CSI_DATA20:
        result = "_3_video_mux_CSI_DATA20";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE::_4_flexspi2_B_DATA1:
        result = "_4_flexspi2_B_DATA1";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE::_5_gpio_mux2_IO15:
        result = "_5_gpio_mux2_IO15";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE::_6_XBAR1_INOUT25:
        result = "_6_XBAR1_INOUT25";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE::_7_enet_1g_RX_CLK:
        result = "_7_enet_1g_RX_CLK";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE::_8_lpspi3_PCS0:
        result = "_8_lpspi3_PCS0";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE::_9_pit1_TRIGGER0:
        result = "_9_pit1_TRIGGER0";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE::_10_gpio8_IO15:
        result = "_10_gpio8_IO15";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE::_11_flexpwm3_PWMB2:
        result = "_11_flexpwm3_PWMB2";
        break;
    }

    return result;
}

/**
 * Converts a C string to IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0_semc_DATA21", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE::_0_semc_DATA21;
    }
    else if ((result = !strncmp(data, "_1_gpt3_CLK", 11)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE::_1_gpt3_CLK;
    }
    else if ((result = !strncmp(data, "_2_sai2_RX_SYNC", 15)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE::_2_sai2_RX_SYNC;
    }
    else if ((result = !strncmp(data, "_3_video_mux_CSI_DATA20", 23)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE::
            _3_video_mux_CSI_DATA20;
    }
    else if ((result = !strncmp(data, "_4_flexspi2_B_DATA1", 19)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE::_4_flexspi2_B_DATA1;
    }
    else if ((result = !strncmp(data, "_5_gpio_mux2_IO15", 17)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE::_5_gpio_mux2_IO15;
    }
    else if ((result = !strncmp(data, "_6_XBAR1_INOUT25", 16)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE::_6_XBAR1_INOUT25;
    }
    else if ((result = !strncmp(data, "_7_enet_1g_RX_CLK", 17)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE::_7_enet_1g_RX_CLK;
    }
    else if ((result = !strncmp(data, "_8_lpspi3_PCS0", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE::_8_lpspi3_PCS0;
    }
    else if ((result = !strncmp(data, "_9_pit1_TRIGGER0", 16)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE::_9_pit1_TRIGGER0;
    }
    else if ((result = !strncmp(data, "_10_gpio8_IO15", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE::_10_gpio8_IO15;
    }
    else if ((result = !strncmp(data, "_11_flexpwm3_PWMB2", 18)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_05_MUX_MODE::_11_flexpwm3_PWMB2;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
