/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class LPSPI1_CFGR1_PINCFG : uint8_t
{
    SIN_IN_SOUT_OUT /*!< SIN is used for input data and SOUT is used for output
                       data */
        ,
    SIN_BOTH_IN_OUT = 1 /*!< SIN is used for both input and output data, only
                           half-duplex serial transfers are supported */
        ,
    SOUT_BOTH_IN_OUT = 2 /*!< SOUT is used for both input and output data, only
                            half-duplex serial transfers are supported */
        ,
    SOUT_IN_SIN_OUT =
        3 /*!< SOUT is used for input data and SIN is used for output data */
};
static_assert(sizeof(LPSPI1_CFGR1_PINCFG) == 1);

/**
 * Converts LPSPI1_CFGR1_PINCFG to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(LPSPI1_CFGR1_PINCFG instance)
{
    const char *result = "UNKNOWN LPSPI1_CFGR1_PINCFG";

    switch (instance)
    {
    case LPSPI1_CFGR1_PINCFG::SIN_IN_SOUT_OUT:
        result = "SIN_IN_SOUT_OUT";
        break;
    case LPSPI1_CFGR1_PINCFG::SIN_BOTH_IN_OUT:
        result = "SIN_BOTH_IN_OUT";
        break;
    case LPSPI1_CFGR1_PINCFG::SOUT_BOTH_IN_OUT:
        result = "SOUT_BOTH_IN_OUT";
        break;
    case LPSPI1_CFGR1_PINCFG::SOUT_IN_SIN_OUT:
        result = "SOUT_IN_SIN_OUT";
        break;
    }

    return result;
}

/**
 * Converts a C string to LPSPI1_CFGR1_PINCFG.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, LPSPI1_CFGR1_PINCFG &output)
{
    bool result = false;

    if ((result = !strncmp(data, "SIN_IN_SOUT_OUT", 15)))
    {
        output = LPSPI1_CFGR1_PINCFG::SIN_IN_SOUT_OUT;
    }
    else if ((result = !strncmp(data, "SIN_BOTH_IN_OUT", 15)))
    {
        output = LPSPI1_CFGR1_PINCFG::SIN_BOTH_IN_OUT;
    }
    else if ((result = !strncmp(data, "SOUT_BOTH_IN_OUT", 16)))
    {
        output = LPSPI1_CFGR1_PINCFG::SOUT_BOTH_IN_OUT;
    }
    else if ((result = !strncmp(data, "SOUT_IN_SIN_OUT", 15)))
    {
        output = LPSPI1_CFGR1_PINCFG::SOUT_IN_SIN_OUT;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
