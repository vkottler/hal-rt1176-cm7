/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8 : uint8_t
{
    _0000 /*!< Cref= 0fF Cspl= 0fF DeltaC= 0fF */,
    _0001 = 1 /*!< Cref= 0fF Cspl= 30fF DeltaC= -30fF */,
    _0010 = 2 /*!< Cref= 0fF Cspl= 43fF DeltaC= -43fF */,
    _0011 = 3 /*!< Cref= 0fF Cspl= 62fF DeltaC=-62fF */,
    _0100 = 4 /*!< Cref= 0fF Cspl=105fF DeltaC=-105fF */,
    _0101 = 5 /*!< Cref= 30fF Cspl= 0fF DeltaC= 30fF */,
    _0110 = 6 /*!< Cref= 30fF Cspl= 43fF DeltaC= -12fF */,
    _0111 = 7 /*!< Cref= 30fF Cspl=105fF DeltaC= -75fF */,
    _1000 = 8 /*!< Cref= 43fF Cspl= 0fF DeltaC= 43fF */,
    _1001 = 9 /*!< Cref= 43fF Cspl= 30fF DeltaC= 13fF */,
    _1010 = 10 /*!< Cref= 43fF Cspl= 62fF DeltaC= -19fF */,
    _1011 = 11 /*!< Cref= 62fF Cspl= 0fF DeltaC= 62fF */,
    _1100 = 12 /*!< Cref= 62fF Cspl= 43fF DeltaC= 19fF */,
    _1101 = 13 /*!< Cref=105fF Cspl= 0fF DeltaC= 105fF */,
    _1110 = 14 /*!< Cref=105fF Cspl=30fF DeltaC= 75fF */,
    _1111 = 15 /*!< Cref=0fF Cspl=0fF DeltaC= 0fF */
};
static_assert(sizeof(ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8) == 1);

/**
 * Converts ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8 to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8 instance)
{
    const char *result = "UNKNOWN ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8";

    switch (instance)
    {
    case ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_0000:
        result = "_0000";
        break;
    case ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_0001:
        result = "_0001";
        break;
    case ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_0010:
        result = "_0010";
        break;
    case ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_0011:
        result = "_0011";
        break;
    case ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_0100:
        result = "_0100";
        break;
    case ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_0101:
        result = "_0101";
        break;
    case ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_0110:
        result = "_0110";
        break;
    case ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_0111:
        result = "_0111";
        break;
    case ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_1000:
        result = "_1000";
        break;
    case ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_1001:
        result = "_1001";
        break;
    case ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_1010:
        result = "_1010";
        break;
    case ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_1011:
        result = "_1011";
        break;
    case ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_1100:
        result = "_1100";
        break;
    case ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_1101:
        result = "_1101";
        break;
    case ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_1110:
        result = "_1110";
        break;
    case ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_1111:
        result = "_1111";
        break;
    }

    return result;
}

/**
 * Converts a C string to ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8 &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0000", 5)))
    {
        output = ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_0000;
    }
    else if ((result = !strncmp(data, "_0001", 5)))
    {
        output = ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_0001;
    }
    else if ((result = !strncmp(data, "_0010", 5)))
    {
        output = ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_0010;
    }
    else if ((result = !strncmp(data, "_0011", 5)))
    {
        output = ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_0011;
    }
    else if ((result = !strncmp(data, "_0100", 5)))
    {
        output = ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_0100;
    }
    else if ((result = !strncmp(data, "_0101", 5)))
    {
        output = ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_0101;
    }
    else if ((result = !strncmp(data, "_0110", 5)))
    {
        output = ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_0110;
    }
    else if ((result = !strncmp(data, "_0111", 5)))
    {
        output = ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_0111;
    }
    else if ((result = !strncmp(data, "_1000", 5)))
    {
        output = ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_1000;
    }
    else if ((result = !strncmp(data, "_1001", 5)))
    {
        output = ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_1001;
    }
    else if ((result = !strncmp(data, "_1010", 5)))
    {
        output = ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_1010;
    }
    else if ((result = !strncmp(data, "_1011", 5)))
    {
        output = ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_1011;
    }
    else if ((result = !strncmp(data, "_1100", 5)))
    {
        output = ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_1100;
    }
    else if ((result = !strncmp(data, "_1101", 5)))
    {
        output = ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_1101;
    }
    else if ((result = !strncmp(data, "_1110", 5)))
    {
        output = ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_1110;
    }
    else if ((result = !strncmp(data, "_1111", 5)))
    {
        output = ANADIG_PMU_PMU_BIAS_CTRL2_WB_ADJ_1P8::_1111;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
