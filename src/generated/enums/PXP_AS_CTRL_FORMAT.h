/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class PXP_AS_CTRL_FORMAT : uint8_t
{
    ARGB8888 /*!< 32-bit pixels with alpha */,
    RGBA888 = 1 /*!< 2-bit pixel with alpha at low 8 bits */,
    RGB888 = 4 /*!< 32-bit pixels without alpha (unpacked 24-bit format) */,
    ARGB1555 = 8 /*!< 16-bit pixels with alpha */,
    ARGB4444 = 9 /*!< 16-bit pixels with alpha */,
    RGBA5551 = 10 /*!< 16-bit pixel with alpha at low 1 bit */,
    RGBA4444 = 11 /*!< 16-bit pixel with alpha at low 4 bits */,
    RGB555 = 12 /*!< 16-bit pixels without alpha */,
    RGB444 = 13 /*!< 16-bit pixels without alpha */,
    RGB565 = 14 /*!< 16-bit pixels without alpha */
};
static_assert(sizeof(PXP_AS_CTRL_FORMAT) == 1);

/**
 * Converts PXP_AS_CTRL_FORMAT to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(PXP_AS_CTRL_FORMAT instance)
{
    const char *result = "UNKNOWN PXP_AS_CTRL_FORMAT";

    switch (instance)
    {
    case PXP_AS_CTRL_FORMAT::ARGB8888:
        result = "ARGB8888";
        break;
    case PXP_AS_CTRL_FORMAT::RGBA888:
        result = "RGBA888";
        break;
    case PXP_AS_CTRL_FORMAT::RGB888:
        result = "RGB888";
        break;
    case PXP_AS_CTRL_FORMAT::ARGB1555:
        result = "ARGB1555";
        break;
    case PXP_AS_CTRL_FORMAT::ARGB4444:
        result = "ARGB4444";
        break;
    case PXP_AS_CTRL_FORMAT::RGBA5551:
        result = "RGBA5551";
        break;
    case PXP_AS_CTRL_FORMAT::RGBA4444:
        result = "RGBA4444";
        break;
    case PXP_AS_CTRL_FORMAT::RGB555:
        result = "RGB555";
        break;
    case PXP_AS_CTRL_FORMAT::RGB444:
        result = "RGB444";
        break;
    case PXP_AS_CTRL_FORMAT::RGB565:
        result = "RGB565";
        break;
    }

    return result;
}

/**
 * Converts a C string to PXP_AS_CTRL_FORMAT.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, PXP_AS_CTRL_FORMAT &output)
{
    bool result = false;

    if ((result = !strncmp(data, "ARGB8888", 8)))
    {
        output = PXP_AS_CTRL_FORMAT::ARGB8888;
    }
    else if ((result = !strncmp(data, "RGBA888", 7)))
    {
        output = PXP_AS_CTRL_FORMAT::RGBA888;
    }
    else if ((result = !strncmp(data, "RGB888", 6)))
    {
        output = PXP_AS_CTRL_FORMAT::RGB888;
    }
    else if ((result = !strncmp(data, "ARGB1555", 8)))
    {
        output = PXP_AS_CTRL_FORMAT::ARGB1555;
    }
    else if ((result = !strncmp(data, "ARGB4444", 8)))
    {
        output = PXP_AS_CTRL_FORMAT::ARGB4444;
    }
    else if ((result = !strncmp(data, "RGBA5551", 8)))
    {
        output = PXP_AS_CTRL_FORMAT::RGBA5551;
    }
    else if ((result = !strncmp(data, "RGBA4444", 8)))
    {
        output = PXP_AS_CTRL_FORMAT::RGBA4444;
    }
    else if ((result = !strncmp(data, "RGB555", 6)))
    {
        output = PXP_AS_CTRL_FORMAT::RGB555;
    }
    else if ((result = !strncmp(data, "RGB444", 6)))
    {
        output = PXP_AS_CTRL_FORMAT::RGB444;
    }
    else if ((result = !strncmp(data, "RGB565", 6)))
    {
        output = PXP_AS_CTRL_FORMAT::RGB565;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
