/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class FLEXIO1_SHIFTCFG_SSTART : uint8_t
{
    start_bit_disabled_transmitterreceivermatch_s_cont /*!< Start bit disabled
                                                          for
                                                          transmitter/receiver/match
                                                          store, transmitter
                                                          loads data on enable
                                                        */
        ,
    start_bit_disabled_transmitterreceivermatch_s_cont_x =
        1 /*!< Start bit disabled for transmitter/receiver/match store,
             transmitter loads data on first shift */
        ,
    transmitter_outputs_start_bit_value_0_before__cont =
        2 /*!< Transmitter outputs start bit value 0 before loading data on
             first shift, receiver/match store sets error flag if start bit is
             not 0 */
        ,
    transmitter_outputs_start_bit_value_1_before__cont =
        3 /*!< Transmitter outputs start bit value 1 before loading data on
             first shift, receiver/match store sets error flag if start bit is
             not 1 */
};
static_assert(sizeof(FLEXIO1_SHIFTCFG_SSTART) == 1);

/**
 * Converts FLEXIO1_SHIFTCFG_SSTART to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(FLEXIO1_SHIFTCFG_SSTART instance)
{
    const char *result = "UNKNOWN FLEXIO1_SHIFTCFG_SSTART";

    switch (instance)
    {
    case FLEXIO1_SHIFTCFG_SSTART::
        start_bit_disabled_transmitterreceivermatch_s_cont:
        result = "start_bit_disabled_transmitterreceivermatch_s_cont";
        break;
    case FLEXIO1_SHIFTCFG_SSTART::
        start_bit_disabled_transmitterreceivermatch_s_cont_x:
        result = "start_bit_disabled_transmitterreceivermatch_s_cont_x";
        break;
    case FLEXIO1_SHIFTCFG_SSTART::
        transmitter_outputs_start_bit_value_0_before__cont:
        result = "transmitter_outputs_start_bit_value_0_before__cont";
        break;
    case FLEXIO1_SHIFTCFG_SSTART::
        transmitter_outputs_start_bit_value_1_before__cont:
        result = "transmitter_outputs_start_bit_value_1_before__cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to FLEXIO1_SHIFTCFG_SSTART.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, FLEXIO1_SHIFTCFG_SSTART &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "start_bit_disabled_transmitterreceivermatch_s_cont", 50)))
    {
        output = FLEXIO1_SHIFTCFG_SSTART::
            start_bit_disabled_transmitterreceivermatch_s_cont;
    }
    else if ((result = !strncmp(
                  data, "start_bit_disabled_transmitterreceivermatch_s_cont_x",
                  52)))
    {
        output = FLEXIO1_SHIFTCFG_SSTART::
            start_bit_disabled_transmitterreceivermatch_s_cont_x;
    }
    else if ((result = !strncmp(
                  data, "transmitter_outputs_start_bit_value_0_before__cont",
                  50)))
    {
        output = FLEXIO1_SHIFTCFG_SSTART::
            transmitter_outputs_start_bit_value_0_before__cont;
    }
    else if ((result = !strncmp(
                  data, "transmitter_outputs_start_bit_value_1_before__cont",
                  50)))
    {
        output = FLEXIO1_SHIFTCFG_SSTART::
            transmitter_outputs_start_bit_value_1_before__cont;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
