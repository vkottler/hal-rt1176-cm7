/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class FLEXIO1_TIMCFG_TIMENA : uint8_t
{
    enable /*!< Timer always enabled */,
    tmr_nminus1_en = 1 /*!< Timer enabled on Timer N-1 enable */,
    tmr_trighi_en = 2 /*!< Timer enabled on Trigger high */,
    tmr_trig_pin_hi_en = 3 /*!< Timer enabled on Trigger high and Pin high */,
    tmr_pinrise_en = 4 /*!< Timer enabled on Pin rising edge */,
    tmr_pinrise_trighi_en =
        5 /*!< Timer enabled on Pin rising edge and Trigger high */,
    tmr_trigrise_en = 6 /*!< Timer enabled on Trigger rising edge */,
    tmr_trigedge_en = 7 /*!< Timer enabled on Trigger rising or falling edge */
};
static_assert(sizeof(FLEXIO1_TIMCFG_TIMENA) == 1);

/**
 * Converts FLEXIO1_TIMCFG_TIMENA to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(FLEXIO1_TIMCFG_TIMENA instance)
{
    const char *result = "UNKNOWN FLEXIO1_TIMCFG_TIMENA";

    switch (instance)
    {
    case FLEXIO1_TIMCFG_TIMENA::enable:
        result = "enable";
        break;
    case FLEXIO1_TIMCFG_TIMENA::tmr_nminus1_en:
        result = "tmr_nminus1_en";
        break;
    case FLEXIO1_TIMCFG_TIMENA::tmr_trighi_en:
        result = "tmr_trighi_en";
        break;
    case FLEXIO1_TIMCFG_TIMENA::tmr_trig_pin_hi_en:
        result = "tmr_trig_pin_hi_en";
        break;
    case FLEXIO1_TIMCFG_TIMENA::tmr_pinrise_en:
        result = "tmr_pinrise_en";
        break;
    case FLEXIO1_TIMCFG_TIMENA::tmr_pinrise_trighi_en:
        result = "tmr_pinrise_trighi_en";
        break;
    case FLEXIO1_TIMCFG_TIMENA::tmr_trigrise_en:
        result = "tmr_trigrise_en";
        break;
    case FLEXIO1_TIMCFG_TIMENA::tmr_trigedge_en:
        result = "tmr_trigedge_en";
        break;
    }

    return result;
}

/**
 * Converts a C string to FLEXIO1_TIMCFG_TIMENA.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, FLEXIO1_TIMCFG_TIMENA &output)
{
    bool result = false;

    if ((result = !strncmp(data, "enable", 6)))
    {
        output = FLEXIO1_TIMCFG_TIMENA::enable;
    }
    else if ((result = !strncmp(data, "tmr_nminus1_en", 14)))
    {
        output = FLEXIO1_TIMCFG_TIMENA::tmr_nminus1_en;
    }
    else if ((result = !strncmp(data, "tmr_trighi_en", 13)))
    {
        output = FLEXIO1_TIMCFG_TIMENA::tmr_trighi_en;
    }
    else if ((result = !strncmp(data, "tmr_trig_pin_hi_en", 18)))
    {
        output = FLEXIO1_TIMCFG_TIMENA::tmr_trig_pin_hi_en;
    }
    else if ((result = !strncmp(data, "tmr_pinrise_en", 14)))
    {
        output = FLEXIO1_TIMCFG_TIMENA::tmr_pinrise_en;
    }
    else if ((result = !strncmp(data, "tmr_pinrise_trighi_en", 21)))
    {
        output = FLEXIO1_TIMCFG_TIMENA::tmr_pinrise_trighi_en;
    }
    else if ((result = !strncmp(data, "tmr_trigrise_en", 15)))
    {
        output = FLEXIO1_TIMCFG_TIMENA::tmr_trigrise_en;
    }
    else if ((result = !strncmp(data, "tmr_trigedge_en", 15)))
    {
        output = FLEXIO1_TIMCFG_TIMENA::tmr_trigedge_en;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
