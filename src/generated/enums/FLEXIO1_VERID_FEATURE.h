/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class FLEXIO1_VERID_FEATURE : uint16_t
{
    standard /*!< Standard features implemented. */,
    state_logic_parallel = 1 /*!< Supports state, logic and parallel modes. */,
    pinctrl = 2 /*!< Supports pin control registers. */,
    state_logic_parallel_pinctrl = 3 /*!< Supports state, logic and parallel
                                        modes; plus pin control registers. */
};
static_assert(sizeof(FLEXIO1_VERID_FEATURE) == 2);

/**
 * Converts FLEXIO1_VERID_FEATURE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(FLEXIO1_VERID_FEATURE instance)
{
    const char *result = "UNKNOWN FLEXIO1_VERID_FEATURE";

    switch (instance)
    {
    case FLEXIO1_VERID_FEATURE::standard:
        result = "standard";
        break;
    case FLEXIO1_VERID_FEATURE::state_logic_parallel:
        result = "state_logic_parallel";
        break;
    case FLEXIO1_VERID_FEATURE::pinctrl:
        result = "pinctrl";
        break;
    case FLEXIO1_VERID_FEATURE::state_logic_parallel_pinctrl:
        result = "state_logic_parallel_pinctrl";
        break;
    }

    return result;
}

/**
 * Converts a C string to FLEXIO1_VERID_FEATURE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, FLEXIO1_VERID_FEATURE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "standard", 8)))
    {
        output = FLEXIO1_VERID_FEATURE::standard;
    }
    else if ((result = !strncmp(data, "state_logic_parallel", 20)))
    {
        output = FLEXIO1_VERID_FEATURE::state_logic_parallel;
    }
    else if ((result = !strncmp(data, "pinctrl", 7)))
    {
        output = FLEXIO1_VERID_FEATURE::pinctrl;
    }
    else if ((result = !strncmp(data, "state_logic_parallel_pinctrl", 28)))
    {
        output = FLEXIO1_VERID_FEATURE::state_logic_parallel_pinctrl;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
