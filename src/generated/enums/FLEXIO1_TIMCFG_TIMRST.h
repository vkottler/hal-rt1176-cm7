/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class FLEXIO1_TIMCFG_TIMRST : uint8_t
{
    never /*!< Timer never reset */,
    tmr_out_hi = 1 /*!< Timer reset on Timer Output high. */,
    pin_eq_tmr_out = 2 /*!< Timer reset on Timer Pin equal to Timer Output */,
    trig_eq_tmr_out =
        3 /*!< Timer reset on Timer Trigger equal to Timer Output */,
    pin_rise_edge = 4 /*!< Timer reset on Timer Pin rising edge */,
    trig_rise_edge = 6 /*!< Timer reset on Trigger rising edge */,
    trig_edge = 7 /*!< Timer reset on Trigger rising or falling edge */
};
static_assert(sizeof(FLEXIO1_TIMCFG_TIMRST) == 1);

/**
 * Converts FLEXIO1_TIMCFG_TIMRST to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(FLEXIO1_TIMCFG_TIMRST instance)
{
    const char *result = "UNKNOWN FLEXIO1_TIMCFG_TIMRST";

    switch (instance)
    {
    case FLEXIO1_TIMCFG_TIMRST::never:
        result = "never";
        break;
    case FLEXIO1_TIMCFG_TIMRST::tmr_out_hi:
        result = "tmr_out_hi";
        break;
    case FLEXIO1_TIMCFG_TIMRST::pin_eq_tmr_out:
        result = "pin_eq_tmr_out";
        break;
    case FLEXIO1_TIMCFG_TIMRST::trig_eq_tmr_out:
        result = "trig_eq_tmr_out";
        break;
    case FLEXIO1_TIMCFG_TIMRST::pin_rise_edge:
        result = "pin_rise_edge";
        break;
    case FLEXIO1_TIMCFG_TIMRST::trig_rise_edge:
        result = "trig_rise_edge";
        break;
    case FLEXIO1_TIMCFG_TIMRST::trig_edge:
        result = "trig_edge";
        break;
    }

    return result;
}

/**
 * Converts a C string to FLEXIO1_TIMCFG_TIMRST.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, FLEXIO1_TIMCFG_TIMRST &output)
{
    bool result = false;

    if ((result = !strncmp(data, "never", 5)))
    {
        output = FLEXIO1_TIMCFG_TIMRST::never;
    }
    else if ((result = !strncmp(data, "tmr_out_hi", 10)))
    {
        output = FLEXIO1_TIMCFG_TIMRST::tmr_out_hi;
    }
    else if ((result = !strncmp(data, "pin_eq_tmr_out", 14)))
    {
        output = FLEXIO1_TIMCFG_TIMRST::pin_eq_tmr_out;
    }
    else if ((result = !strncmp(data, "trig_eq_tmr_out", 15)))
    {
        output = FLEXIO1_TIMCFG_TIMRST::trig_eq_tmr_out;
    }
    else if ((result = !strncmp(data, "pin_rise_edge", 13)))
    {
        output = FLEXIO1_TIMCFG_TIMRST::pin_rise_edge;
    }
    else if ((result = !strncmp(data, "trig_rise_edge", 14)))
    {
        output = FLEXIO1_TIMCFG_TIMRST::trig_rise_edge;
    }
    else if ((result = !strncmp(data, "trig_edge", 9)))
    {
        output = FLEXIO1_TIMCFG_TIMRST::trig_edge;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
