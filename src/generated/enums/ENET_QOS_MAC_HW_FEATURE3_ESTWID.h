/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class ENET_QOS_MAC_HW_FEATURE3_ESTWID : uint8_t
{
    NOWIDTH /*!< Width not configured */,
    WIDTH16 = 1 /*!< 16 */,
    WIDTH20 = 2 /*!< 20 */,
    WIDTH24 = 3 /*!< 24 */
};
static_assert(sizeof(ENET_QOS_MAC_HW_FEATURE3_ESTWID) == 1);

/**
 * Converts ENET_QOS_MAC_HW_FEATURE3_ESTWID to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(ENET_QOS_MAC_HW_FEATURE3_ESTWID instance)
{
    const char *result = "UNKNOWN ENET_QOS_MAC_HW_FEATURE3_ESTWID";

    switch (instance)
    {
    case ENET_QOS_MAC_HW_FEATURE3_ESTWID::NOWIDTH:
        result = "NOWIDTH";
        break;
    case ENET_QOS_MAC_HW_FEATURE3_ESTWID::WIDTH16:
        result = "WIDTH16";
        break;
    case ENET_QOS_MAC_HW_FEATURE3_ESTWID::WIDTH20:
        result = "WIDTH20";
        break;
    case ENET_QOS_MAC_HW_FEATURE3_ESTWID::WIDTH24:
        result = "WIDTH24";
        break;
    }

    return result;
}

/**
 * Converts a C string to ENET_QOS_MAC_HW_FEATURE3_ESTWID.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        ENET_QOS_MAC_HW_FEATURE3_ESTWID &output)
{
    bool result = false;

    if ((result = !strncmp(data, "NOWIDTH", 7)))
    {
        output = ENET_QOS_MAC_HW_FEATURE3_ESTWID::NOWIDTH;
    }
    else if ((result = !strncmp(data, "WIDTH16", 7)))
    {
        output = ENET_QOS_MAC_HW_FEATURE3_ESTWID::WIDTH16;
    }
    else if ((result = !strncmp(data, "WIDTH20", 7)))
    {
        output = ENET_QOS_MAC_HW_FEATURE3_ESTWID::WIDTH20;
    }
    else if ((result = !strncmp(data, "WIDTH24", 7)))
    {
        output = ENET_QOS_MAC_HW_FEATURE3_ESTWID::WIDTH24;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
