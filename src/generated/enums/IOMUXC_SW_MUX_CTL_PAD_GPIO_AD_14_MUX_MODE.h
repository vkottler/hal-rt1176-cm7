/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE : uint8_t
{
    _0_spdif_EXT_CLK /*!< Select mux mode: ALT0 mux port: SPDIF_EXT_CLK of
                        instance: SPDIF */
        ,
    _1_anatop_24M_OUT = 1 /*!< Select mux mode: ALT1 mux port: REF_CLK_24M of
                             instance: XTAL OSC */
        ,
    _2_gpt1_COMPARE1 = 2 /*!< Select mux mode: ALT2 mux port: GPT1_COMPARE1 of
                            instance: GPT1 */
        ,
    _3_flexspi1_B_DATA1 = 3 /*!< Select mux mode: ALT3 mux port:
                               FLEXSPI1_B_DATA01 of instance: FLEXSPI1 */
        ,
    _4_video_mux_CSI_VSYNC = 4 /*!< Select mux mode: ALT4 mux port:
                                  VIDEO_MUX_CSI_VSYNC of instance: VIDEO_MUX */
        ,
    _5_gpio_mux3_IO13 = 5 /*!< Select mux mode: ALT5 mux port: GPIO_MUX3_IO13
                             of instance: GPIO_MUX3 */
        ,
    _6_enet_RX_CLK =
        6 /*!< Select mux mode: ALT6 mux port: ENET_RX_CLK of instance: ENET */
        ,
    _8_flexio2_FLEXIO14 = 8 /*!< Select mux mode: ALT8 mux port: FLEXIO2_D14 of
                               instance: FLEXIO2 */
        ,
    _9_CCM_ENET_REF_CLK_25M = 9 /*!< Select mux mode: ALT9 mux port:
                                   CCM_ENET_REF_CLK_25M of instance: CCM */
        ,
    _10_gpio9_IO13 = 10 /*!< Select mux mode: ALT10 mux port: GPIO9_IO13 of
                           instance: GPIO9 */
        ,
    _11_flexpwm3_PWMX0 = 11 /*!< Select mux mode: ALT11 mux port:
                               FLEXPWM3_PWM0_X of instance: FLEXPWM3 */
};
static_assert(sizeof(IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE) == 1);

/**
 * Converts IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(
    IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE instance)
{
    const char *result = "UNKNOWN IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE";

    switch (instance)
    {
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE::_0_spdif_EXT_CLK:
        result = "_0_spdif_EXT_CLK";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE::_1_anatop_24M_OUT:
        result = "_1_anatop_24M_OUT";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE::_2_gpt1_COMPARE1:
        result = "_2_gpt1_COMPARE1";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE::_3_flexspi1_B_DATA1:
        result = "_3_flexspi1_B_DATA1";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE::_4_video_mux_CSI_VSYNC:
        result = "_4_video_mux_CSI_VSYNC";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE::_5_gpio_mux3_IO13:
        result = "_5_gpio_mux3_IO13";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE::_6_enet_RX_CLK:
        result = "_6_enet_RX_CLK";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE::_8_flexio2_FLEXIO14:
        result = "_8_flexio2_FLEXIO14";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE::_9_CCM_ENET_REF_CLK_25M:
        result = "_9_CCM_ENET_REF_CLK_25M";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE::_10_gpio9_IO13:
        result = "_10_gpio9_IO13";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE::_11_flexpwm3_PWMX0:
        result = "_11_flexpwm3_PWMX0";
        break;
    }

    return result;
}

/**
 * Converts a C string to IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0_spdif_EXT_CLK", 16)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE::_0_spdif_EXT_CLK;
    }
    else if ((result = !strncmp(data, "_1_anatop_24M_OUT", 17)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE::_1_anatop_24M_OUT;
    }
    else if ((result = !strncmp(data, "_2_gpt1_COMPARE1", 16)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE::_2_gpt1_COMPARE1;
    }
    else if ((result = !strncmp(data, "_3_flexspi1_B_DATA1", 19)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE::_3_flexspi1_B_DATA1;
    }
    else if ((result = !strncmp(data, "_4_video_mux_CSI_VSYNC", 22)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE::_4_video_mux_CSI_VSYNC;
    }
    else if ((result = !strncmp(data, "_5_gpio_mux3_IO13", 17)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE::_5_gpio_mux3_IO13;
    }
    else if ((result = !strncmp(data, "_6_enet_RX_CLK", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE::_6_enet_RX_CLK;
    }
    else if ((result = !strncmp(data, "_8_flexio2_FLEXIO14", 19)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE::_8_flexio2_FLEXIO14;
    }
    else if ((result = !strncmp(data, "_9_CCM_ENET_REF_CLK_25M", 23)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE::_9_CCM_ENET_REF_CLK_25M;
    }
    else if ((result = !strncmp(data, "_10_gpio9_IO13", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE::_10_gpio9_IO13;
    }
    else if ((result = !strncmp(data, "_11_flexpwm3_PWMX0", 18)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_14_MUX_MODE::_11_flexpwm3_PWMX0;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
