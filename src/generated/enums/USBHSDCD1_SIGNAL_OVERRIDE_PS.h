/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class USBHSDCD1_SIGNAL_OVERRIDE_PS : uint8_t
{
    NO_OVERRIDE /*!< No overrides. Bit field must remain at this value during
                   normal USB data communication to prevent unexpected
                   conditions on USB_DP and USB_DM pins. (Default) */
        ,
    PRI_DET_OVERRIDE = 2 /*!< Enables VDP_SRC voltage source for the USB_DP pin
                            and IDM_SINK current source for the USB_DM pin. */
};
static_assert(sizeof(USBHSDCD1_SIGNAL_OVERRIDE_PS) == 1);

/**
 * Converts USBHSDCD1_SIGNAL_OVERRIDE_PS to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USBHSDCD1_SIGNAL_OVERRIDE_PS instance)
{
    const char *result = "UNKNOWN USBHSDCD1_SIGNAL_OVERRIDE_PS";

    switch (instance)
    {
    case USBHSDCD1_SIGNAL_OVERRIDE_PS::NO_OVERRIDE:
        result = "NO_OVERRIDE";
        break;
    case USBHSDCD1_SIGNAL_OVERRIDE_PS::PRI_DET_OVERRIDE:
        result = "PRI_DET_OVERRIDE";
        break;
    }

    return result;
}

/**
 * Converts a C string to USBHSDCD1_SIGNAL_OVERRIDE_PS.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USBHSDCD1_SIGNAL_OVERRIDE_PS &output)
{
    bool result = false;

    if ((result = !strncmp(data, "NO_OVERRIDE", 11)))
    {
        output = USBHSDCD1_SIGNAL_OVERRIDE_PS::NO_OVERRIDE;
    }
    else if ((result = !strncmp(data, "PRI_DET_OVERRIDE", 16)))
    {
        output = USBHSDCD1_SIGNAL_OVERRIDE_PS::PRI_DET_OVERRIDE;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
