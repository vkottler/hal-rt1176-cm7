/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class XRDC2_D0_PAC_PDAC_W1_DL2 : uint8_t
{
    disabled_00 /*!< Lock disabled, descriptor registers can be written.. */,
    disabled_01 = 1 /*!< Lock disabled until the next reset, descriptor
                       registers can be written.. */
        ,
    enabled_10 = 2 /*!< Lock enabled, only domain "x" can only update the DxACP
                      field; no other fields can be written.. */
        ,
    enabled_11 = 3 /*!< Lock enabled, descriptor registers are read-only until
                      the next reset. */
};
static_assert(sizeof(XRDC2_D0_PAC_PDAC_W1_DL2) == 1);

/**
 * Converts XRDC2_D0_PAC_PDAC_W1_DL2 to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(XRDC2_D0_PAC_PDAC_W1_DL2 instance)
{
    const char *result = "UNKNOWN XRDC2_D0_PAC_PDAC_W1_DL2";

    switch (instance)
    {
    case XRDC2_D0_PAC_PDAC_W1_DL2::disabled_00:
        result = "disabled_00";
        break;
    case XRDC2_D0_PAC_PDAC_W1_DL2::disabled_01:
        result = "disabled_01";
        break;
    case XRDC2_D0_PAC_PDAC_W1_DL2::enabled_10:
        result = "enabled_10";
        break;
    case XRDC2_D0_PAC_PDAC_W1_DL2::enabled_11:
        result = "enabled_11";
        break;
    }

    return result;
}

/**
 * Converts a C string to XRDC2_D0_PAC_PDAC_W1_DL2.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, XRDC2_D0_PAC_PDAC_W1_DL2 &output)
{
    bool result = false;

    if ((result = !strncmp(data, "disabled_00", 11)))
    {
        output = XRDC2_D0_PAC_PDAC_W1_DL2::disabled_00;
    }
    else if ((result = !strncmp(data, "disabled_01", 11)))
    {
        output = XRDC2_D0_PAC_PDAC_W1_DL2::disabled_01;
    }
    else if ((result = !strncmp(data, "enabled_10", 10)))
    {
        output = XRDC2_D0_PAC_PDAC_W1_DL2::enabled_10;
    }
    else if ((result = !strncmp(data, "enabled_11", 10)))
    {
        output = XRDC2_D0_PAC_PDAC_W1_DL2::enabled_11;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
