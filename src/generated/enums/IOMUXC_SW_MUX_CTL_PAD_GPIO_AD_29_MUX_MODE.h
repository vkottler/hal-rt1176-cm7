/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE : uint8_t
{
    _0_lpspi1_PCS0 /*!< Select mux mode: ALT0 mux port: LPSPI1_PCS0 of
                      instance: LPSPI1 */
        ,
    _1_lpuart5_RX = 1 /*!< Select mux mode: ALT1 mux port: LPUART5_RXD of
                         instance: LPUART5 */
        ,
    _2_enet_REF_CLK = 2 /*!< Select mux mode: ALT2 mux port: ENET_REF_CLK of
                           instance: ENET */
        ,
    _3_enet_TX_CLK =
        3 /*!< Select mux mode: ALT3 mux port: ENET_TX_CLK of instance: ENET */
        ,
    _4_flexpwm2_PWMB2 = 4 /*!< Select mux mode: ALT4 mux port: FLEXPWM2_PWM2_B
                             of instance: FLEXPWM2 */
        ,
    _5_gpio_mux3_IO28 = 5 /*!< Select mux mode: ALT5 mux port: GPIO_MUX3_IO28
                             of instance: GPIO_MUX3 */
        ,
    _6_kpp_COL3 =
        6 /*!< Select mux mode: ALT6 mux port: KPP_COL03 of instance: KPP */,
    _8_flexio2_FLEXIO29 = 8 /*!< Select mux mode: ALT8 mux port: FLEXIO2_D29 of
                               instance: FLEXIO2 */
        ,
    _9_video_mux_EXT_DCIC2 = 9 /*!< Select mux mode: ALT9 mux port:
                                  VIDEO_MUX_EXT_DCIC2 of instance: VIDEO_MUX */
        ,
    _10_gpio9_IO28 = 10 /*!< Select mux mode: ALT10 mux port: GPIO9_IO28 of
                           instance: GPIO9 */
        ,
    _11_usdhc2_RESET_B = 11 /*!< Select mux mode: ALT11 mux port:
                               USDHC2_RESET_B of instance: USDHC2 */
};
static_assert(sizeof(IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE) == 1);

/**
 * Converts IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(
    IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE instance)
{
    const char *result = "UNKNOWN IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE";

    switch (instance)
    {
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE::_0_lpspi1_PCS0:
        result = "_0_lpspi1_PCS0";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE::_1_lpuart5_RX:
        result = "_1_lpuart5_RX";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE::_2_enet_REF_CLK:
        result = "_2_enet_REF_CLK";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE::_3_enet_TX_CLK:
        result = "_3_enet_TX_CLK";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE::_4_flexpwm2_PWMB2:
        result = "_4_flexpwm2_PWMB2";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE::_5_gpio_mux3_IO28:
        result = "_5_gpio_mux3_IO28";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE::_6_kpp_COL3:
        result = "_6_kpp_COL3";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE::_8_flexio2_FLEXIO29:
        result = "_8_flexio2_FLEXIO29";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE::_9_video_mux_EXT_DCIC2:
        result = "_9_video_mux_EXT_DCIC2";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE::_10_gpio9_IO28:
        result = "_10_gpio9_IO28";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE::_11_usdhc2_RESET_B:
        result = "_11_usdhc2_RESET_B";
        break;
    }

    return result;
}

/**
 * Converts a C string to IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0_lpspi1_PCS0", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE::_0_lpspi1_PCS0;
    }
    else if ((result = !strncmp(data, "_1_lpuart5_RX", 13)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE::_1_lpuart5_RX;
    }
    else if ((result = !strncmp(data, "_2_enet_REF_CLK", 15)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE::_2_enet_REF_CLK;
    }
    else if ((result = !strncmp(data, "_3_enet_TX_CLK", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE::_3_enet_TX_CLK;
    }
    else if ((result = !strncmp(data, "_4_flexpwm2_PWMB2", 17)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE::_4_flexpwm2_PWMB2;
    }
    else if ((result = !strncmp(data, "_5_gpio_mux3_IO28", 17)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE::_5_gpio_mux3_IO28;
    }
    else if ((result = !strncmp(data, "_6_kpp_COL3", 11)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE::_6_kpp_COL3;
    }
    else if ((result = !strncmp(data, "_8_flexio2_FLEXIO29", 19)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE::_8_flexio2_FLEXIO29;
    }
    else if ((result = !strncmp(data, "_9_video_mux_EXT_DCIC2", 22)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE::_9_video_mux_EXT_DCIC2;
    }
    else if ((result = !strncmp(data, "_10_gpio9_IO28", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE::_10_gpio9_IO28;
    }
    else if ((result = !strncmp(data, "_11_usdhc2_RESET_B", 18)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_29_MUX_MODE::_11_usdhc2_RESET_B;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
