/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class USDHC1_BLK_ATT_BLKSIZE : uint16_t
{
    _0 /*!< No data transfer */,
    _1 = 1 /*!< 1 byte */,
    _2 = 2 /*!< 2 bytes */,
    _3 = 3 /*!< 3 bytes */,
    _4 = 4 /*!< 4 bytes */,
    _511 = 511 /*!< 511 bytes */,
    _512 = 512 /*!< 512 bytes */,
    _2048 = 2048 /*!< 2048 bytes */,
    _4096 = 4096 /*!< 4096 bytes */
};
static_assert(sizeof(USDHC1_BLK_ATT_BLKSIZE) == 2);

/**
 * Converts USDHC1_BLK_ATT_BLKSIZE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USDHC1_BLK_ATT_BLKSIZE instance)
{
    const char *result = "UNKNOWN USDHC1_BLK_ATT_BLKSIZE";

    switch (instance)
    {
    case USDHC1_BLK_ATT_BLKSIZE::_0:
        result = "_0";
        break;
    case USDHC1_BLK_ATT_BLKSIZE::_1:
        result = "_1";
        break;
    case USDHC1_BLK_ATT_BLKSIZE::_2:
        result = "_2";
        break;
    case USDHC1_BLK_ATT_BLKSIZE::_3:
        result = "_3";
        break;
    case USDHC1_BLK_ATT_BLKSIZE::_4:
        result = "_4";
        break;
    case USDHC1_BLK_ATT_BLKSIZE::_511:
        result = "_511";
        break;
    case USDHC1_BLK_ATT_BLKSIZE::_512:
        result = "_512";
        break;
    case USDHC1_BLK_ATT_BLKSIZE::_2048:
        result = "_2048";
        break;
    case USDHC1_BLK_ATT_BLKSIZE::_4096:
        result = "_4096";
        break;
    }

    return result;
}

/**
 * Converts a C string to USDHC1_BLK_ATT_BLKSIZE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USDHC1_BLK_ATT_BLKSIZE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0", 2)))
    {
        output = USDHC1_BLK_ATT_BLKSIZE::_0;
    }
    else if ((result = !strncmp(data, "_1", 2)))
    {
        output = USDHC1_BLK_ATT_BLKSIZE::_1;
    }
    else if ((result = !strncmp(data, "_2", 2)))
    {
        output = USDHC1_BLK_ATT_BLKSIZE::_2;
    }
    else if ((result = !strncmp(data, "_3", 2)))
    {
        output = USDHC1_BLK_ATT_BLKSIZE::_3;
    }
    else if ((result = !strncmp(data, "_4", 2)))
    {
        output = USDHC1_BLK_ATT_BLKSIZE::_4;
    }
    else if ((result = !strncmp(data, "_511", 4)))
    {
        output = USDHC1_BLK_ATT_BLKSIZE::_511;
    }
    else if ((result = !strncmp(data, "_512", 4)))
    {
        output = USDHC1_BLK_ATT_BLKSIZE::_512;
    }
    else if ((result = !strncmp(data, "_2048", 5)))
    {
        output = USDHC1_BLK_ATT_BLKSIZE::_2048;
    }
    else if ((result = !strncmp(data, "_4096", 5)))
    {
        output = USDHC1_BLK_ATT_BLKSIZE::_4096;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
