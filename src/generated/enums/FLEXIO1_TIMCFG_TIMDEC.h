/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class FLEXIO1_TIMCFG_TIMDEC : uint8_t
{
    flexio_clk_shiftclk_tmr_out /*!< Decrement counter on FlexIO clock, Shift
                                   clock equals Timer output. */
        ,
    trig_edge_shiftclk_tmr_out =
        1 /*!< Decrement counter on Trigger input (both edges), Shift clock
             equals Timer output. */
        ,
    pin_edge_shiftclk_tmr_out = 2 /*!< Decrement counter on Pin input (both
                                     edges), Shift clock equals Pin input. */
        ,
    trig_edge_shiftclk_trig_in =
        3 /*!< Decrement counter on Trigger input (both edges), Shift clock
             equals Trigger input. */
        ,
    flexio_clk_div16_shiftclk_tmr_out =
        4 /*!< Decrement counter on FlexIO clock divided by 16, Shift clock
             equals Timer output. */
        ,
    flexio_clk_div256_shiftclk_tmr_out =
        5 /*!< Decrement counter on FlexIO clock divided by 256, Shift clock
             equals Timer output. */
        ,
    pin_rise_shiftclk_pin_in = 6 /*!< Decrement counter on Pin input (rising
                                    edge), Shift clock equals Pin input. */
        ,
    trig_rise_shiftclk_trig_in =
        7 /*!< Decrement counter on Trigger input (rising edge), Shift clock
             equals Trigger input. */
};
static_assert(sizeof(FLEXIO1_TIMCFG_TIMDEC) == 1);

/**
 * Converts FLEXIO1_TIMCFG_TIMDEC to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(FLEXIO1_TIMCFG_TIMDEC instance)
{
    const char *result = "UNKNOWN FLEXIO1_TIMCFG_TIMDEC";

    switch (instance)
    {
    case FLEXIO1_TIMCFG_TIMDEC::flexio_clk_shiftclk_tmr_out:
        result = "flexio_clk_shiftclk_tmr_out";
        break;
    case FLEXIO1_TIMCFG_TIMDEC::trig_edge_shiftclk_tmr_out:
        result = "trig_edge_shiftclk_tmr_out";
        break;
    case FLEXIO1_TIMCFG_TIMDEC::pin_edge_shiftclk_tmr_out:
        result = "pin_edge_shiftclk_tmr_out";
        break;
    case FLEXIO1_TIMCFG_TIMDEC::trig_edge_shiftclk_trig_in:
        result = "trig_edge_shiftclk_trig_in";
        break;
    case FLEXIO1_TIMCFG_TIMDEC::flexio_clk_div16_shiftclk_tmr_out:
        result = "flexio_clk_div16_shiftclk_tmr_out";
        break;
    case FLEXIO1_TIMCFG_TIMDEC::flexio_clk_div256_shiftclk_tmr_out:
        result = "flexio_clk_div256_shiftclk_tmr_out";
        break;
    case FLEXIO1_TIMCFG_TIMDEC::pin_rise_shiftclk_pin_in:
        result = "pin_rise_shiftclk_pin_in";
        break;
    case FLEXIO1_TIMCFG_TIMDEC::trig_rise_shiftclk_trig_in:
        result = "trig_rise_shiftclk_trig_in";
        break;
    }

    return result;
}

/**
 * Converts a C string to FLEXIO1_TIMCFG_TIMDEC.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, FLEXIO1_TIMCFG_TIMDEC &output)
{
    bool result = false;

    if ((result = !strncmp(data, "flexio_clk_shiftclk_tmr_out", 27)))
    {
        output = FLEXIO1_TIMCFG_TIMDEC::flexio_clk_shiftclk_tmr_out;
    }
    else if ((result = !strncmp(data, "trig_edge_shiftclk_tmr_out", 26)))
    {
        output = FLEXIO1_TIMCFG_TIMDEC::trig_edge_shiftclk_tmr_out;
    }
    else if ((result = !strncmp(data, "pin_edge_shiftclk_tmr_out", 25)))
    {
        output = FLEXIO1_TIMCFG_TIMDEC::pin_edge_shiftclk_tmr_out;
    }
    else if ((result = !strncmp(data, "trig_edge_shiftclk_trig_in", 26)))
    {
        output = FLEXIO1_TIMCFG_TIMDEC::trig_edge_shiftclk_trig_in;
    }
    else if ((result =
                  !strncmp(data, "flexio_clk_div16_shiftclk_tmr_out", 33)))
    {
        output = FLEXIO1_TIMCFG_TIMDEC::flexio_clk_div16_shiftclk_tmr_out;
    }
    else if ((result =
                  !strncmp(data, "flexio_clk_div256_shiftclk_tmr_out", 34)))
    {
        output = FLEXIO1_TIMCFG_TIMDEC::flexio_clk_div256_shiftclk_tmr_out;
    }
    else if ((result = !strncmp(data, "pin_rise_shiftclk_pin_in", 24)))
    {
        output = FLEXIO1_TIMCFG_TIMDEC::pin_rise_shiftclk_pin_in;
    }
    else if ((result = !strncmp(data, "trig_rise_shiftclk_trig_in", 26)))
    {
        output = FLEXIO1_TIMCFG_TIMDEC::trig_rise_shiftclk_trig_in;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
