/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class PDM_CTRL_1_DISEL : uint8_t
{
    all_disabled /*!< DMA and interrupt requests disabled */,
    dmareq_enabled = 1 /*!< DMA requests enabled */,
    intreq_enabled = 2 /*!< Interrupt requests enabled */
};
static_assert(sizeof(PDM_CTRL_1_DISEL) == 1);

/**
 * Converts PDM_CTRL_1_DISEL to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(PDM_CTRL_1_DISEL instance)
{
    const char *result = "UNKNOWN PDM_CTRL_1_DISEL";

    switch (instance)
    {
    case PDM_CTRL_1_DISEL::all_disabled:
        result = "all_disabled";
        break;
    case PDM_CTRL_1_DISEL::dmareq_enabled:
        result = "dmareq_enabled";
        break;
    case PDM_CTRL_1_DISEL::intreq_enabled:
        result = "intreq_enabled";
        break;
    }

    return result;
}

/**
 * Converts a C string to PDM_CTRL_1_DISEL.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, PDM_CTRL_1_DISEL &output)
{
    bool result = false;

    if ((result = !strncmp(data, "all_disabled", 12)))
    {
        output = PDM_CTRL_1_DISEL::all_disabled;
    }
    else if ((result = !strncmp(data, "dmareq_enabled", 14)))
    {
        output = PDM_CTRL_1_DISEL::dmareq_enabled;
    }
    else if ((result = !strncmp(data, "intreq_enabled", 14)))
    {
        output = PDM_CTRL_1_DISEL::intreq_enabled;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
