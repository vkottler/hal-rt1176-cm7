/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class OCOTP_CTRL_WR_UNLOCK : uint16_t
{
    locked /*!< OTP write access is locked. */,
    unlocked = 15991 /*!< OTP write access is unlocked. */
};
static_assert(sizeof(OCOTP_CTRL_WR_UNLOCK) == 2);

/**
 * Converts OCOTP_CTRL_WR_UNLOCK to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(OCOTP_CTRL_WR_UNLOCK instance)
{
    const char *result = "UNKNOWN OCOTP_CTRL_WR_UNLOCK";

    switch (instance)
    {
    case OCOTP_CTRL_WR_UNLOCK::locked:
        result = "locked";
        break;
    case OCOTP_CTRL_WR_UNLOCK::unlocked:
        result = "unlocked";
        break;
    }

    return result;
}

/**
 * Converts a C string to OCOTP_CTRL_WR_UNLOCK.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, OCOTP_CTRL_WR_UNLOCK &output)
{
    bool result = false;

    if ((result = !strncmp(data, "locked", 6)))
    {
        output = OCOTP_CTRL_WR_UNLOCK::locked;
    }
    else if ((result = !strncmp(data, "unlocked", 8)))
    {
        output = OCOTP_CTRL_WR_UNLOCK::unlocked;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
