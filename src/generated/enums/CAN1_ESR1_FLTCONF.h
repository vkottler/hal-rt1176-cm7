/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class CAN1_ESR1_FLTCONF : uint8_t
{
    error_active /*!< Error Active */,
    error_passive = 1 /*!< Error Passive */,
    bus_off = 3 /*!< Bus Off */
};
static_assert(sizeof(CAN1_ESR1_FLTCONF) == 1);

/**
 * Converts CAN1_ESR1_FLTCONF to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(CAN1_ESR1_FLTCONF instance)
{
    const char *result = "UNKNOWN CAN1_ESR1_FLTCONF";

    switch (instance)
    {
    case CAN1_ESR1_FLTCONF::error_active:
        result = "error_active";
        break;
    case CAN1_ESR1_FLTCONF::error_passive:
        result = "error_passive";
        break;
    case CAN1_ESR1_FLTCONF::bus_off:
        result = "bus_off";
        break;
    }

    return result;
}

/**
 * Converts a C string to CAN1_ESR1_FLTCONF.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, CAN1_ESR1_FLTCONF &output)
{
    bool result = false;

    if ((result = !strncmp(data, "error_active", 12)))
    {
        output = CAN1_ESR1_FLTCONF::error_active;
    }
    else if ((result = !strncmp(data, "error_passive", 13)))
    {
        output = CAN1_ESR1_FLTCONF::error_passive;
    }
    else if ((result = !strncmp(data, "bus_off", 7)))
    {
        output = CAN1_ESR1_FLTCONF::bus_off;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
