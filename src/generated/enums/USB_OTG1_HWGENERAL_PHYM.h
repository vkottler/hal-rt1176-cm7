/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class USB_OTG1_HWGENERAL_PHYM : uint8_t
{
    UTMI /*!< UTMI/UMTI+ */,
    ULPI_DDR = 1 /*!< ULPI DDR */,
    ULPI = 2 /*!< ULPI */,
    SERIAL = 3 /*!< Serial Only */,
    SW_RST_UTMI = 4 /*!< Software programmable - reset to UTMI/UTMI+ */,
    SW_RST_ULPI_DDR = 5 /*!< Software programmable - reset to ULPI DDR */,
    SW_RST_ULPI = 6 /*!< Software programmable - reset to ULPI */,
    SW_RST_SERIAL = 7 /*!< Software programmable - reset to Serial */
};
static_assert(sizeof(USB_OTG1_HWGENERAL_PHYM) == 1);

/**
 * Converts USB_OTG1_HWGENERAL_PHYM to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USB_OTG1_HWGENERAL_PHYM instance)
{
    const char *result = "UNKNOWN USB_OTG1_HWGENERAL_PHYM";

    switch (instance)
    {
    case USB_OTG1_HWGENERAL_PHYM::UTMI:
        result = "UTMI";
        break;
    case USB_OTG1_HWGENERAL_PHYM::ULPI_DDR:
        result = "ULPI_DDR";
        break;
    case USB_OTG1_HWGENERAL_PHYM::ULPI:
        result = "ULPI";
        break;
    case USB_OTG1_HWGENERAL_PHYM::SERIAL:
        result = "SERIAL";
        break;
    case USB_OTG1_HWGENERAL_PHYM::SW_RST_UTMI:
        result = "SW_RST_UTMI";
        break;
    case USB_OTG1_HWGENERAL_PHYM::SW_RST_ULPI_DDR:
        result = "SW_RST_ULPI_DDR";
        break;
    case USB_OTG1_HWGENERAL_PHYM::SW_RST_ULPI:
        result = "SW_RST_ULPI";
        break;
    case USB_OTG1_HWGENERAL_PHYM::SW_RST_SERIAL:
        result = "SW_RST_SERIAL";
        break;
    }

    return result;
}

/**
 * Converts a C string to USB_OTG1_HWGENERAL_PHYM.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USB_OTG1_HWGENERAL_PHYM &output)
{
    bool result = false;

    if ((result = !strncmp(data, "UTMI", 4)))
    {
        output = USB_OTG1_HWGENERAL_PHYM::UTMI;
    }
    else if ((result = !strncmp(data, "ULPI_DDR", 8)))
    {
        output = USB_OTG1_HWGENERAL_PHYM::ULPI_DDR;
    }
    else if ((result = !strncmp(data, "ULPI", 4)))
    {
        output = USB_OTG1_HWGENERAL_PHYM::ULPI;
    }
    else if ((result = !strncmp(data, "SERIAL", 6)))
    {
        output = USB_OTG1_HWGENERAL_PHYM::SERIAL;
    }
    else if ((result = !strncmp(data, "SW_RST_UTMI", 11)))
    {
        output = USB_OTG1_HWGENERAL_PHYM::SW_RST_UTMI;
    }
    else if ((result = !strncmp(data, "SW_RST_ULPI_DDR", 15)))
    {
        output = USB_OTG1_HWGENERAL_PHYM::SW_RST_ULPI_DDR;
    }
    else if ((result = !strncmp(data, "SW_RST_ULPI", 11)))
    {
        output = USB_OTG1_HWGENERAL_PHYM::SW_RST_ULPI;
    }
    else if ((result = !strncmp(data, "SW_RST_SERIAL", 13)))
    {
        output = USB_OTG1_HWGENERAL_PHYM::SW_RST_SERIAL;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
