/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class USB_OTG1_USBMODE_CM : uint8_t
{
    IDL /*!< Idle [Default for combination host/device] */,
    DEVICE_CONTR =
        2 /*!< Device Controller [Default for device only controller] */,
    HOST_CONTR = 3 /*!< Host Controller [Default for host only controller] */
};
static_assert(sizeof(USB_OTG1_USBMODE_CM) == 1);

/**
 * Converts USB_OTG1_USBMODE_CM to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USB_OTG1_USBMODE_CM instance)
{
    const char *result = "UNKNOWN USB_OTG1_USBMODE_CM";

    switch (instance)
    {
    case USB_OTG1_USBMODE_CM::IDL:
        result = "IDL";
        break;
    case USB_OTG1_USBMODE_CM::DEVICE_CONTR:
        result = "DEVICE_CONTR";
        break;
    case USB_OTG1_USBMODE_CM::HOST_CONTR:
        result = "HOST_CONTR";
        break;
    }

    return result;
}

/**
 * Converts a C string to USB_OTG1_USBMODE_CM.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USB_OTG1_USBMODE_CM &output)
{
    bool result = false;

    if ((result = !strncmp(data, "IDL", 3)))
    {
        output = USB_OTG1_USBMODE_CM::IDL;
    }
    else if ((result = !strncmp(data, "DEVICE_CONTR", 12)))
    {
        output = USB_OTG1_USBMODE_CM::DEVICE_CONTR;
    }
    else if ((result = !strncmp(data, "HOST_CONTR", 10)))
    {
        output = USB_OTG1_USBMODE_CM::HOST_CONTR;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
