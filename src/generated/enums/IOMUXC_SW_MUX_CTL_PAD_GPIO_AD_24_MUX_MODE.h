/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE : uint8_t
{
    _0_lpuart1_TX /*!< Select mux mode: ALT0 mux port: LPUART1_TXD of instance:
                     LPUART1 */
        ,
    _1_lpspi2_SCK = 1 /*!< Select mux mode: ALT1 mux port: LPSPI2_SCK of
                         instance: LPSPI2 */
        ,
    _2_video_mux_CSI_DATA0 =
        2 /*!< Select mux mode: ALT2 mux port: VIDEO_MUX_CSI_DATA00 of
             instance: VIDEO_MUX */
        ,
    _3_enet_RX_EN =
        3 /*!< Select mux mode: ALT3 mux port: ENET_RX_EN of instance: ENET */,
    _4_flexpwm2_PWMA0 = 4 /*!< Select mux mode: ALT4 mux port: FLEXPWM2_PWM0_A
                             of instance: FLEXPWM2 */
        ,
    _5_gpio_mux3_IO23 = 5 /*!< Select mux mode: ALT5 mux port: GPIO_MUX3_IO23
                             of instance: GPIO_MUX3 */
        ,
    _6_kpp_ROW5 =
        6 /*!< Select mux mode: ALT6 mux port: KPP_ROW05 of instance: KPP */,
    _8_flexio2_FLEXIO24 = 8 /*!< Select mux mode: ALT8 mux port: FLEXIO2_D24 of
                               instance: FLEXIO2 */
        ,
    _9_lpi2c4_SCL = 9 /*!< Select mux mode: ALT9 mux port: LPI2C4_SCL of
                         instance: LPI2C4 */
        ,
    _10_gpio9_IO23 = 10 /*!< Select mux mode: ALT10 mux port: GPIO9_IO23 of
                           instance: GPIO9 */
};
static_assert(sizeof(IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE) == 1);

/**
 * Converts IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(
    IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE instance)
{
    const char *result = "UNKNOWN IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE";

    switch (instance)
    {
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE::_0_lpuart1_TX:
        result = "_0_lpuart1_TX";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE::_1_lpspi2_SCK:
        result = "_1_lpspi2_SCK";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE::_2_video_mux_CSI_DATA0:
        result = "_2_video_mux_CSI_DATA0";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE::_3_enet_RX_EN:
        result = "_3_enet_RX_EN";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE::_4_flexpwm2_PWMA0:
        result = "_4_flexpwm2_PWMA0";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE::_5_gpio_mux3_IO23:
        result = "_5_gpio_mux3_IO23";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE::_6_kpp_ROW5:
        result = "_6_kpp_ROW5";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE::_8_flexio2_FLEXIO24:
        result = "_8_flexio2_FLEXIO24";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE::_9_lpi2c4_SCL:
        result = "_9_lpi2c4_SCL";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE::_10_gpio9_IO23:
        result = "_10_gpio9_IO23";
        break;
    }

    return result;
}

/**
 * Converts a C string to IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0_lpuart1_TX", 13)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE::_0_lpuart1_TX;
    }
    else if ((result = !strncmp(data, "_1_lpspi2_SCK", 13)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE::_1_lpspi2_SCK;
    }
    else if ((result = !strncmp(data, "_2_video_mux_CSI_DATA0", 22)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE::_2_video_mux_CSI_DATA0;
    }
    else if ((result = !strncmp(data, "_3_enet_RX_EN", 13)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE::_3_enet_RX_EN;
    }
    else if ((result = !strncmp(data, "_4_flexpwm2_PWMA0", 17)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE::_4_flexpwm2_PWMA0;
    }
    else if ((result = !strncmp(data, "_5_gpio_mux3_IO23", 17)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE::_5_gpio_mux3_IO23;
    }
    else if ((result = !strncmp(data, "_6_kpp_ROW5", 11)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE::_6_kpp_ROW5;
    }
    else if ((result = !strncmp(data, "_8_flexio2_FLEXIO24", 19)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE::_8_flexio2_FLEXIO24;
    }
    else if ((result = !strncmp(data, "_9_lpi2c4_SCL", 13)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE::_9_lpi2c4_SCL;
    }
    else if ((result = !strncmp(data, "_10_gpio9_IO23", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_24_MUX_MODE::_10_gpio9_IO23;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
