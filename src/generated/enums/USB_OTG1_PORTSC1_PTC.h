/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class USB_OTG1_PORTSC1_PTC : uint8_t
{
    TST_MODE_DIS /*!< TEST_MODE_DISABLE */,
    J_STATE = 1 /*!< J_STATE */,
    K_STATE = 2 /*!< K_STATE */,
    SE0 = 3 /*!< SE0 (host) / NAK (device) */,
    PCKT = 4 /*!< Packet */,
    HS = 5 /*!< FORCE_ENABLE_HS */,
    FS = 6 /*!< FORCE_ENABLE_FS */,
    LS = 7 /*!< FORCE_ENABLE_LS */
};
static_assert(sizeof(USB_OTG1_PORTSC1_PTC) == 1);

/**
 * Converts USB_OTG1_PORTSC1_PTC to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USB_OTG1_PORTSC1_PTC instance)
{
    const char *result = "UNKNOWN USB_OTG1_PORTSC1_PTC";

    switch (instance)
    {
    case USB_OTG1_PORTSC1_PTC::TST_MODE_DIS:
        result = "TST_MODE_DIS";
        break;
    case USB_OTG1_PORTSC1_PTC::J_STATE:
        result = "J_STATE";
        break;
    case USB_OTG1_PORTSC1_PTC::K_STATE:
        result = "K_STATE";
        break;
    case USB_OTG1_PORTSC1_PTC::SE0:
        result = "SE0";
        break;
    case USB_OTG1_PORTSC1_PTC::PCKT:
        result = "PCKT";
        break;
    case USB_OTG1_PORTSC1_PTC::HS:
        result = "HS";
        break;
    case USB_OTG1_PORTSC1_PTC::FS:
        result = "FS";
        break;
    case USB_OTG1_PORTSC1_PTC::LS:
        result = "LS";
        break;
    }

    return result;
}

/**
 * Converts a C string to USB_OTG1_PORTSC1_PTC.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USB_OTG1_PORTSC1_PTC &output)
{
    bool result = false;

    if ((result = !strncmp(data, "TST_MODE_DIS", 12)))
    {
        output = USB_OTG1_PORTSC1_PTC::TST_MODE_DIS;
    }
    else if ((result = !strncmp(data, "J_STATE", 7)))
    {
        output = USB_OTG1_PORTSC1_PTC::J_STATE;
    }
    else if ((result = !strncmp(data, "K_STATE", 7)))
    {
        output = USB_OTG1_PORTSC1_PTC::K_STATE;
    }
    else if ((result = !strncmp(data, "SE0", 3)))
    {
        output = USB_OTG1_PORTSC1_PTC::SE0;
    }
    else if ((result = !strncmp(data, "PCKT", 4)))
    {
        output = USB_OTG1_PORTSC1_PTC::PCKT;
    }
    else if ((result = !strncmp(data, "HS", 2)))
    {
        output = USB_OTG1_PORTSC1_PTC::HS;
    }
    else if ((result = !strncmp(data, "FS", 2)))
    {
        output = USB_OTG1_PORTSC1_PTC::FS;
    }
    else if ((result = !strncmp(data, "LS", 2)))
    {
        output = USB_OTG1_PORTSC1_PTC::LS;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
