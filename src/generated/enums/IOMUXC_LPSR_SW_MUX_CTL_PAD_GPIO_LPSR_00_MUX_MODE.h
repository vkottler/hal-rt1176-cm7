/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_00_MUX_MODE : uint8_t
{
    _0_can3_TX /*!< Select mux mode: ALT0 mux port: FLEXCAN3_TX of instance:
                  FLEXCAN3 */
        ,
    _1_mic_CLK =
        1 /*!< Select mux mode: ALT1 mux port: MIC_CLK of instance: MIC */,
    _2_mqs_RIGHT =
        2 /*!< Select mux mode: ALT2 mux port: MQS_RIGHT of instance: MQS */,
    _3_ARM_CM4_EVENTO = 3 /*!< Select mux mode: ALT3 mux port: ARM_CM4_EVENTO
                             of instance: CM4 */
        ,
    _5_gpio_mux6_IO0 = 5 /*!< Select mux mode: ALT5 mux port: GPIO_MUX6_IO00 of
                            instance: GPIO_MUX6 */
        ,
    _6_lpuart12_TX = 6 /*!< Select mux mode: ALT6 mux port: LPUART12_TXD of
                          instance: LPUART12 */
        ,
    _7_sai4_MCLK =
        7 /*!< Select mux mode: ALT7 mux port: SAI4_MCLK of instance: SAI4 */,
    _10_gpio12_IO0 = 10 /*!< Select mux mode: ALT10 mux port: GPIO12_IO00 of
                           instance: GPIO12 */
};
static_assert(sizeof(IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_00_MUX_MODE) == 1);

/**
 * Converts IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_00_MUX_MODE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(
    IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_00_MUX_MODE instance)
{
    const char *result =
        "UNKNOWN IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_00_MUX_MODE";

    switch (instance)
    {
    case IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_00_MUX_MODE::_0_can3_TX:
        result = "_0_can3_TX";
        break;
    case IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_00_MUX_MODE::_1_mic_CLK:
        result = "_1_mic_CLK";
        break;
    case IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_00_MUX_MODE::_2_mqs_RIGHT:
        result = "_2_mqs_RIGHT";
        break;
    case IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_00_MUX_MODE::_3_ARM_CM4_EVENTO:
        result = "_3_ARM_CM4_EVENTO";
        break;
    case IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_00_MUX_MODE::_5_gpio_mux6_IO0:
        result = "_5_gpio_mux6_IO0";
        break;
    case IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_00_MUX_MODE::_6_lpuart12_TX:
        result = "_6_lpuart12_TX";
        break;
    case IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_00_MUX_MODE::_7_sai4_MCLK:
        result = "_7_sai4_MCLK";
        break;
    case IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_00_MUX_MODE::_10_gpio12_IO0:
        result = "_10_gpio12_IO0";
        break;
    }

    return result;
}

/**
 * Converts a C string to IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_00_MUX_MODE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(
    const char *data, IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_00_MUX_MODE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0_can3_TX", 10)))
    {
        output = IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_00_MUX_MODE::_0_can3_TX;
    }
    else if ((result = !strncmp(data, "_1_mic_CLK", 10)))
    {
        output = IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_00_MUX_MODE::_1_mic_CLK;
    }
    else if ((result = !strncmp(data, "_2_mqs_RIGHT", 12)))
    {
        output =
            IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_00_MUX_MODE::_2_mqs_RIGHT;
    }
    else if ((result = !strncmp(data, "_3_ARM_CM4_EVENTO", 17)))
    {
        output = IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_00_MUX_MODE::
            _3_ARM_CM4_EVENTO;
    }
    else if ((result = !strncmp(data, "_5_gpio_mux6_IO0", 16)))
    {
        output =
            IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_00_MUX_MODE::_5_gpio_mux6_IO0;
    }
    else if ((result = !strncmp(data, "_6_lpuart12_TX", 14)))
    {
        output =
            IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_00_MUX_MODE::_6_lpuart12_TX;
    }
    else if ((result = !strncmp(data, "_7_sai4_MCLK", 12)))
    {
        output =
            IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_00_MUX_MODE::_7_sai4_MCLK;
    }
    else if ((result = !strncmp(data, "_10_gpio12_IO0", 14)))
    {
        output =
            IOMUXC_LPSR_SW_MUX_CTL_PAD_GPIO_LPSR_00_MUX_MODE::_10_gpio12_IO0;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
