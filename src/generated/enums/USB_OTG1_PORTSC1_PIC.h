/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class USB_OTG1_PORTSC1_PIC : uint8_t
{
    PORT_INDICATOR_OFF /*!< Port indicators are off */,
    PORT_IND_AMBER = 1 /*!< Amber */,
    PORT_IND_GREEN = 2 /*!< Green */,
    UNDEFINED = 3 /*!< Undefined */
};
static_assert(sizeof(USB_OTG1_PORTSC1_PIC) == 1);

/**
 * Converts USB_OTG1_PORTSC1_PIC to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USB_OTG1_PORTSC1_PIC instance)
{
    const char *result = "UNKNOWN USB_OTG1_PORTSC1_PIC";

    switch (instance)
    {
    case USB_OTG1_PORTSC1_PIC::PORT_INDICATOR_OFF:
        result = "PORT_INDICATOR_OFF";
        break;
    case USB_OTG1_PORTSC1_PIC::PORT_IND_AMBER:
        result = "PORT_IND_AMBER";
        break;
    case USB_OTG1_PORTSC1_PIC::PORT_IND_GREEN:
        result = "PORT_IND_GREEN";
        break;
    case USB_OTG1_PORTSC1_PIC::UNDEFINED:
        result = "UNDEFINED";
        break;
    }

    return result;
}

/**
 * Converts a C string to USB_OTG1_PORTSC1_PIC.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USB_OTG1_PORTSC1_PIC &output)
{
    bool result = false;

    if ((result = !strncmp(data, "PORT_INDICATOR_OFF", 18)))
    {
        output = USB_OTG1_PORTSC1_PIC::PORT_INDICATOR_OFF;
    }
    else if ((result = !strncmp(data, "PORT_IND_AMBER", 14)))
    {
        output = USB_OTG1_PORTSC1_PIC::PORT_IND_AMBER;
    }
    else if ((result = !strncmp(data, "PORT_IND_GREEN", 14)))
    {
        output = USB_OTG1_PORTSC1_PIC::PORT_IND_GREEN;
    }
    else if ((result = !strncmp(data, "UNDEFINED", 9)))
    {
        output = USB_OTG1_PORTSC1_PIC::UNDEFINED;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
