/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class CSI_CR18_MASK_OPTION : uint8_t
{
    _0 /*!< Writing to memory (OCRAM or external DDR) from first completely
          frame, when using this option, the CSI_ENABLE should be 1. */
        ,
    _1 = 1 /*!< Writing to memory when CSI_ENABLE is 1. */,
    _2 = 2 /*!< Writing to memory from second completely frame, when using this
              option, the CSI_ENABLE should be 1. */
        ,
    _3 = 3 /*!< Writing to memory when data comes in, not matter the CSI_ENABLE
              is 1 or 0. */
};
static_assert(sizeof(CSI_CR18_MASK_OPTION) == 1);

/**
 * Converts CSI_CR18_MASK_OPTION to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(CSI_CR18_MASK_OPTION instance)
{
    const char *result = "UNKNOWN CSI_CR18_MASK_OPTION";

    switch (instance)
    {
    case CSI_CR18_MASK_OPTION::_0:
        result = "_0";
        break;
    case CSI_CR18_MASK_OPTION::_1:
        result = "_1";
        break;
    case CSI_CR18_MASK_OPTION::_2:
        result = "_2";
        break;
    case CSI_CR18_MASK_OPTION::_3:
        result = "_3";
        break;
    }

    return result;
}

/**
 * Converts a C string to CSI_CR18_MASK_OPTION.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, CSI_CR18_MASK_OPTION &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0", 2)))
    {
        output = CSI_CR18_MASK_OPTION::_0;
    }
    else if ((result = !strncmp(data, "_1", 2)))
    {
        output = CSI_CR18_MASK_OPTION::_1;
    }
    else if ((result = !strncmp(data, "_2", 2)))
    {
        output = CSI_CR18_MASK_OPTION::_2;
    }
    else if ((result = !strncmp(data, "_3", 2)))
    {
        output = CSI_CR18_MASK_OPTION::_3;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
