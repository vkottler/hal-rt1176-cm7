/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class SystemControl_ID_ISAR3_SIMD_INSTRS : uint8_t
{
    _0 /*!< None supported, ARMv7-M unused. */,
    _1 = 1 /*!< Adds support for the SSAT and USAT instructions, and for the Q
              bit in the PSRs. */
        ,
    _3 = 3 /*!< As for 1, and adds support for the PKHBT, PKHTB, QADD16, QADD8,
              QASX, QSUB16, QSUB8, QSAX, SADD16, SADD8, SASX, SEL, SHADD16,
              SHADD8, SHASX, SHSUB16, SHSUB8, SHSAX, SSAT16, SSUB16, SSUB8,
              SSAX, SXTAB16, SXTB16, UADD16, UADD8, UASX, UHADD16, UHADD8,
              UHASX, UHSUB16, UHSUB8, UHSAX, UQADD16, UQADD8, UQASX, UQSUB16,
              UQSUB8, UQSAX, USAD8, USADA8, USAT16, USUB16, USUB8, USAX,
              UXTAB16, and UXTB16 instructions. Also adds support for the
              GE[3:0] bits in the PSRs. */
};
static_assert(sizeof(SystemControl_ID_ISAR3_SIMD_INSTRS) == 1);

/**
 * Converts SystemControl_ID_ISAR3_SIMD_INSTRS to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(SystemControl_ID_ISAR3_SIMD_INSTRS instance)
{
    const char *result = "UNKNOWN SystemControl_ID_ISAR3_SIMD_INSTRS";

    switch (instance)
    {
    case SystemControl_ID_ISAR3_SIMD_INSTRS::_0:
        result = "_0";
        break;
    case SystemControl_ID_ISAR3_SIMD_INSTRS::_1:
        result = "_1";
        break;
    case SystemControl_ID_ISAR3_SIMD_INSTRS::_3:
        result = "_3";
        break;
    }

    return result;
}

/**
 * Converts a C string to SystemControl_ID_ISAR3_SIMD_INSTRS.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        SystemControl_ID_ISAR3_SIMD_INSTRS &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0", 2)))
    {
        output = SystemControl_ID_ISAR3_SIMD_INSTRS::_0;
    }
    else if ((result = !strncmp(data, "_1", 2)))
    {
        output = SystemControl_ID_ISAR3_SIMD_INSTRS::_1;
    }
    else if ((result = !strncmp(data, "_3", 2)))
    {
        output = SystemControl_ID_ISAR3_SIMD_INSTRS::_3;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
