/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class SSARC_HP_SRAM2__TYPE : uint8_t
{
    SR /*!< SR */,
    WO = 1 /*!< WO */,
    RMW_OR = 2 /*!< RMW_OR */,
    RMW_AND = 3 /*!< RMW_AND */,
    DELAY = 4 /*!< DELAY */,
    POLLING_0 = 5 /*!< POLLING_0 */,
    POLLING_1 = 6 /*!< POLLING_1 */
};
static_assert(sizeof(SSARC_HP_SRAM2__TYPE) == 1);

/**
 * Converts SSARC_HP_SRAM2__TYPE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(SSARC_HP_SRAM2__TYPE instance)
{
    const char *result = "UNKNOWN SSARC_HP_SRAM2__TYPE";

    switch (instance)
    {
    case SSARC_HP_SRAM2__TYPE::SR:
        result = "SR";
        break;
    case SSARC_HP_SRAM2__TYPE::WO:
        result = "WO";
        break;
    case SSARC_HP_SRAM2__TYPE::RMW_OR:
        result = "RMW_OR";
        break;
    case SSARC_HP_SRAM2__TYPE::RMW_AND:
        result = "RMW_AND";
        break;
    case SSARC_HP_SRAM2__TYPE::DELAY:
        result = "DELAY";
        break;
    case SSARC_HP_SRAM2__TYPE::POLLING_0:
        result = "POLLING_0";
        break;
    case SSARC_HP_SRAM2__TYPE::POLLING_1:
        result = "POLLING_1";
        break;
    }

    return result;
}

/**
 * Converts a C string to SSARC_HP_SRAM2__TYPE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, SSARC_HP_SRAM2__TYPE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "SR", 2)))
    {
        output = SSARC_HP_SRAM2__TYPE::SR;
    }
    else if ((result = !strncmp(data, "WO", 2)))
    {
        output = SSARC_HP_SRAM2__TYPE::WO;
    }
    else if ((result = !strncmp(data, "RMW_OR", 6)))
    {
        output = SSARC_HP_SRAM2__TYPE::RMW_OR;
    }
    else if ((result = !strncmp(data, "RMW_AND", 7)))
    {
        output = SSARC_HP_SRAM2__TYPE::RMW_AND;
    }
    else if ((result = !strncmp(data, "DELAY", 5)))
    {
        output = SSARC_HP_SRAM2__TYPE::DELAY;
    }
    else if ((result = !strncmp(data, "POLLING_0", 9)))
    {
        output = SSARC_HP_SRAM2__TYPE::POLLING_0;
    }
    else if ((result = !strncmp(data, "POLLING_1", 9)))
    {
        output = SSARC_HP_SRAM2__TYPE::POLLING_1;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
