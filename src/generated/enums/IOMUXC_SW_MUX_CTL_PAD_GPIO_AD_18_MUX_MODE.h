/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE : uint8_t
{
    _0_sai1_RX_SYNC /*!< Select mux mode: ALT0 mux port: SAI1_RX_SYNC of
                       instance: SAI1 */
        ,
    _1_ACMP2_OUT =
        1 /*!< Select mux mode: ALT1 mux port: ACMP2_OUT of instance: ACMP2 */,
    _2_lpspi1_PCS1 = 2 /*!< Select mux mode: ALT2 mux port: LPSPI1_PCS1 of
                          instance: LPSPI1 */
        ,
    _3_flexspi1_A_SS0_B = 3 /*!< Select mux mode: ALT3 mux port:
                               FLEXSPI1_A_SS0_B of instance: FLEXSPI1 */
        ,
    _4_video_mux_CSI_DATA7 =
        4 /*!< Select mux mode: ALT4 mux port: VIDEO_MUX_CSI_DATA07 of
             instance: VIDEO_MUX */
        ,
    _5_gpio_mux3_IO17 = 5 /*!< Select mux mode: ALT5 mux port: GPIO_MUX3_IO17
                             of instance: GPIO_MUX3 */
        ,
    _6_enet_CRS =
        6 /*!< Select mux mode: ALT6 mux port: ENET_CRS of instance: ENET */,
    _8_flexio2_FLEXIO18 = 8 /*!< Select mux mode: ALT8 mux port: FLEXIO2_D18 of
                               instance: FLEXIO2 */
        ,
    _9_lpi2c2_SCL = 9 /*!< Select mux mode: ALT9 mux port: LPI2C2_SCL of
                         instance: LPI2C2 */
        ,
    _10_gpio9_IO17 = 10 /*!< Select mux mode: ALT10 mux port: GPIO9_IO17 of
                           instance: GPIO9 */
        ,
    _11_flexpwm4_PWMX0 = 11 /*!< Select mux mode: ALT11 mux port:
                               FLEXPWM4_PWM0_X of instance: FLEXPWM4 */
};
static_assert(sizeof(IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE) == 1);

/**
 * Converts IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(
    IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE instance)
{
    const char *result = "UNKNOWN IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE";

    switch (instance)
    {
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE::_0_sai1_RX_SYNC:
        result = "_0_sai1_RX_SYNC";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE::_1_ACMP2_OUT:
        result = "_1_ACMP2_OUT";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE::_2_lpspi1_PCS1:
        result = "_2_lpspi1_PCS1";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE::_3_flexspi1_A_SS0_B:
        result = "_3_flexspi1_A_SS0_B";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE::_4_video_mux_CSI_DATA7:
        result = "_4_video_mux_CSI_DATA7";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE::_5_gpio_mux3_IO17:
        result = "_5_gpio_mux3_IO17";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE::_6_enet_CRS:
        result = "_6_enet_CRS";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE::_8_flexio2_FLEXIO18:
        result = "_8_flexio2_FLEXIO18";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE::_9_lpi2c2_SCL:
        result = "_9_lpi2c2_SCL";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE::_10_gpio9_IO17:
        result = "_10_gpio9_IO17";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE::_11_flexpwm4_PWMX0:
        result = "_11_flexpwm4_PWMX0";
        break;
    }

    return result;
}

/**
 * Converts a C string to IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0_sai1_RX_SYNC", 15)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE::_0_sai1_RX_SYNC;
    }
    else if ((result = !strncmp(data, "_1_ACMP2_OUT", 12)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE::_1_ACMP2_OUT;
    }
    else if ((result = !strncmp(data, "_2_lpspi1_PCS1", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE::_2_lpspi1_PCS1;
    }
    else if ((result = !strncmp(data, "_3_flexspi1_A_SS0_B", 19)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE::_3_flexspi1_A_SS0_B;
    }
    else if ((result = !strncmp(data, "_4_video_mux_CSI_DATA7", 22)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE::_4_video_mux_CSI_DATA7;
    }
    else if ((result = !strncmp(data, "_5_gpio_mux3_IO17", 17)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE::_5_gpio_mux3_IO17;
    }
    else if ((result = !strncmp(data, "_6_enet_CRS", 11)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE::_6_enet_CRS;
    }
    else if ((result = !strncmp(data, "_8_flexio2_FLEXIO18", 19)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE::_8_flexio2_FLEXIO18;
    }
    else if ((result = !strncmp(data, "_9_lpi2c2_SCL", 13)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE::_9_lpi2c2_SCL;
    }
    else if ((result = !strncmp(data, "_10_gpio9_IO17", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE::_10_gpio9_IO17;
    }
    else if ((result = !strncmp(data, "_11_flexpwm4_PWMX0", 18)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_18_MUX_MODE::_11_flexpwm4_PWMX0;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
