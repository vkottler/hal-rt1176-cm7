/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE : uint8_t
{
    _0_spdif_OUT /*!< Select mux mode: ALT0 mux port: SPDIF_OUT of instance:
                    SPDIF */
        ,
    _1_lpuart10_RX = 1 /*!< Select mux mode: ALT1 mux port: LPUART10_RXD of
                          instance: LPUART10 */
        ,
    _2_gpt1_COMPARE3 = 2 /*!< Select mux mode: ALT2 mux port: GPT1_COMPARE3 of
                            instance: GPT1 */
        ,
    _3_flexspi1_B_SCLK = 3 /*!< Select mux mode: ALT3 mux port: FLEXSPI1_B_SCLK
                              of instance: FLEXSPI1 */
        ,
    _4_video_mux_CSI_DATA9 =
        4 /*!< Select mux mode: ALT4 mux port: VIDEO_MUX_CSI_DATA09 of
             instance: VIDEO_MUX */
        ,
    _5_gpio_mux3_IO15 = 5 /*!< Select mux mode: ALT5 mux port: GPIO_MUX3_IO15
                             of instance: GPIO_MUX3 */
        ,
    _6_ENET_RX_DATA3 = 6 /*!< Select mux mode: ALT6 mux port: ENET_RX_DATA03 of
                            instance: ENET */
        ,
    _8_flexio2_FLEXIO16 = 8 /*!< Select mux mode: ALT8 mux port: FLEXIO2_D16 of
                               instance: FLEXIO2 */
        ,
    _9_enet_1g_MDC = 9 /*!< Select mux mode: ALT9 mux port: ENET_1G_MDC of
                          instance: ENET_1G */
        ,
    _10_gpio9_IO15 = 10 /*!< Select mux mode: ALT10 mux port: GPIO9_IO15 of
                           instance: GPIO9 */
        ,
    _11_flexpwm3_PWMX2 = 11 /*!< Select mux mode: ALT11 mux port:
                               FLEXPWM3_PWM2_X of instance: FLEXPWM3 */
};
static_assert(sizeof(IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE) == 1);

/**
 * Converts IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(
    IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE instance)
{
    const char *result = "UNKNOWN IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE";

    switch (instance)
    {
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE::_0_spdif_OUT:
        result = "_0_spdif_OUT";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE::_1_lpuart10_RX:
        result = "_1_lpuart10_RX";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE::_2_gpt1_COMPARE3:
        result = "_2_gpt1_COMPARE3";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE::_3_flexspi1_B_SCLK:
        result = "_3_flexspi1_B_SCLK";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE::_4_video_mux_CSI_DATA9:
        result = "_4_video_mux_CSI_DATA9";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE::_5_gpio_mux3_IO15:
        result = "_5_gpio_mux3_IO15";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE::_6_ENET_RX_DATA3:
        result = "_6_ENET_RX_DATA3";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE::_8_flexio2_FLEXIO16:
        result = "_8_flexio2_FLEXIO16";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE::_9_enet_1g_MDC:
        result = "_9_enet_1g_MDC";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE::_10_gpio9_IO15:
        result = "_10_gpio9_IO15";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE::_11_flexpwm3_PWMX2:
        result = "_11_flexpwm3_PWMX2";
        break;
    }

    return result;
}

/**
 * Converts a C string to IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0_spdif_OUT", 12)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE::_0_spdif_OUT;
    }
    else if ((result = !strncmp(data, "_1_lpuart10_RX", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE::_1_lpuart10_RX;
    }
    else if ((result = !strncmp(data, "_2_gpt1_COMPARE3", 16)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE::_2_gpt1_COMPARE3;
    }
    else if ((result = !strncmp(data, "_3_flexspi1_B_SCLK", 18)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE::_3_flexspi1_B_SCLK;
    }
    else if ((result = !strncmp(data, "_4_video_mux_CSI_DATA9", 22)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE::_4_video_mux_CSI_DATA9;
    }
    else if ((result = !strncmp(data, "_5_gpio_mux3_IO15", 17)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE::_5_gpio_mux3_IO15;
    }
    else if ((result = !strncmp(data, "_6_ENET_RX_DATA3", 16)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE::_6_ENET_RX_DATA3;
    }
    else if ((result = !strncmp(data, "_8_flexio2_FLEXIO16", 19)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE::_8_flexio2_FLEXIO16;
    }
    else if ((result = !strncmp(data, "_9_enet_1g_MDC", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE::_9_enet_1g_MDC;
    }
    else if ((result = !strncmp(data, "_10_gpio9_IO15", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE::_10_gpio9_IO15;
    }
    else if ((result = !strncmp(data, "_11_flexpwm3_PWMX2", 18)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_16_MUX_MODE::_11_flexpwm3_PWMX2;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
