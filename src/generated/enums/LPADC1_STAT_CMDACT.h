/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class LPADC1_STAT_CMDACT : uint8_t
{
    _0 /*!< No command is currently in progress. */,
    _1 = 1 /*!< Command 1 currently being executed. */,
    _2 = 2 /*!< Command 2 currently being executed. */,
    _3 = 3 /*!< Associated command number is currently being executed. */,
    _4 = 4 /*!< Associated command number is currently being executed. */,
    _5 = 5 /*!< Associated command number is currently being executed. */,
    _6 = 6 /*!< Associated command number is currently being executed. */,
    _7 = 7 /*!< Associated command number is currently being executed. */,
    _8 = 8 /*!< Associated command number is currently being executed. */,
    _9 = 9 /*!< Associated command number is currently being executed. */
};
static_assert(sizeof(LPADC1_STAT_CMDACT) == 1);

/**
 * Converts LPADC1_STAT_CMDACT to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(LPADC1_STAT_CMDACT instance)
{
    const char *result = "UNKNOWN LPADC1_STAT_CMDACT";

    switch (instance)
    {
    case LPADC1_STAT_CMDACT::_0:
        result = "_0";
        break;
    case LPADC1_STAT_CMDACT::_1:
        result = "_1";
        break;
    case LPADC1_STAT_CMDACT::_2:
        result = "_2";
        break;
    case LPADC1_STAT_CMDACT::_3:
        result = "_3";
        break;
    case LPADC1_STAT_CMDACT::_4:
        result = "_4";
        break;
    case LPADC1_STAT_CMDACT::_5:
        result = "_5";
        break;
    case LPADC1_STAT_CMDACT::_6:
        result = "_6";
        break;
    case LPADC1_STAT_CMDACT::_7:
        result = "_7";
        break;
    case LPADC1_STAT_CMDACT::_8:
        result = "_8";
        break;
    case LPADC1_STAT_CMDACT::_9:
        result = "_9";
        break;
    }

    return result;
}

/**
 * Converts a C string to LPADC1_STAT_CMDACT.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, LPADC1_STAT_CMDACT &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0", 2)))
    {
        output = LPADC1_STAT_CMDACT::_0;
    }
    else if ((result = !strncmp(data, "_1", 2)))
    {
        output = LPADC1_STAT_CMDACT::_1;
    }
    else if ((result = !strncmp(data, "_2", 2)))
    {
        output = LPADC1_STAT_CMDACT::_2;
    }
    else if ((result = !strncmp(data, "_3", 2)))
    {
        output = LPADC1_STAT_CMDACT::_3;
    }
    else if ((result = !strncmp(data, "_4", 2)))
    {
        output = LPADC1_STAT_CMDACT::_4;
    }
    else if ((result = !strncmp(data, "_5", 2)))
    {
        output = LPADC1_STAT_CMDACT::_5;
    }
    else if ((result = !strncmp(data, "_6", 2)))
    {
        output = LPADC1_STAT_CMDACT::_6;
    }
    else if ((result = !strncmp(data, "_7", 2)))
    {
        output = LPADC1_STAT_CMDACT::_7;
    }
    else if ((result = !strncmp(data, "_8", 2)))
    {
        output = LPADC1_STAT_CMDACT::_8;
    }
    else if ((result = !strncmp(data, "_9", 2)))
    {
        output = LPADC1_STAT_CMDACT::_9;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
