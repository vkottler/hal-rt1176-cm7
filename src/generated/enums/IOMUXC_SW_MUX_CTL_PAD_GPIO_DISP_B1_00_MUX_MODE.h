/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_00_MUX_MODE : uint8_t
{
    _0_video_mux_LCDIF_CLK /*!< Select mux mode: ALT0 mux port:
                              VIDEO_MUX_LCDIF_CLK of instance: VIDEO_MUX */
        ,
    _1_enet_1g_RX_EN = 1 /*!< Select mux mode: ALT1 mux port: ENET_1G_RX_EN of
                            instance: ENET_1G */
        ,
    _3_qtimer1_TIMER0 =
        3 /*!< Select mux mode: ALT3 mux port: TMR1_TIMER0 of instance: TMR1 */
        ,
    _4_XBAR1_INOUT26 = 4 /*!< Select mux mode: ALT4 mux port: XBAR1_INOUT26 of
                            instance: XBAR1 */
        ,
    _5_gpio_mux4_IO21 = 5 /*!< Select mux mode: ALT5 mux port: GPIO_MUX4_IO21
                             of instance: GPIO_MUX4 */
        ,
    _8_enet_qos_RX_EN = 8 /*!< Select mux mode: ALT8 mux port: ENET_QOS_RX_EN
                             of instance: ENET_QOS */
        ,
    _10_gpio10_IO21 = 10 /*!< Select mux mode: ALT10 mux port: GPIO10_IO21 of
                            instance: GPIO10 */
};
static_assert(sizeof(IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_00_MUX_MODE) == 1);

/**
 * Converts IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_00_MUX_MODE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(
    IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_00_MUX_MODE instance)
{
    const char *result =
        "UNKNOWN IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_00_MUX_MODE";

    switch (instance)
    {
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_00_MUX_MODE::
        _0_video_mux_LCDIF_CLK:
        result = "_0_video_mux_LCDIF_CLK";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_00_MUX_MODE::_1_enet_1g_RX_EN:
        result = "_1_enet_1g_RX_EN";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_00_MUX_MODE::_3_qtimer1_TIMER0:
        result = "_3_qtimer1_TIMER0";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_00_MUX_MODE::_4_XBAR1_INOUT26:
        result = "_4_XBAR1_INOUT26";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_00_MUX_MODE::_5_gpio_mux4_IO21:
        result = "_5_gpio_mux4_IO21";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_00_MUX_MODE::_8_enet_qos_RX_EN:
        result = "_8_enet_qos_RX_EN";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_00_MUX_MODE::_10_gpio10_IO21:
        result = "_10_gpio10_IO21";
        break;
    }

    return result;
}

/**
 * Converts a C string to IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_00_MUX_MODE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_00_MUX_MODE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0_video_mux_LCDIF_CLK", 22)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_00_MUX_MODE::
            _0_video_mux_LCDIF_CLK;
    }
    else if ((result = !strncmp(data, "_1_enet_1g_RX_EN", 16)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_00_MUX_MODE::_1_enet_1g_RX_EN;
    }
    else if ((result = !strncmp(data, "_3_qtimer1_TIMER0", 17)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_00_MUX_MODE::_3_qtimer1_TIMER0;
    }
    else if ((result = !strncmp(data, "_4_XBAR1_INOUT26", 16)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_00_MUX_MODE::_4_XBAR1_INOUT26;
    }
    else if ((result = !strncmp(data, "_5_gpio_mux4_IO21", 17)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_00_MUX_MODE::_5_gpio_mux4_IO21;
    }
    else if ((result = !strncmp(data, "_8_enet_qos_RX_EN", 17)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_00_MUX_MODE::_8_enet_qos_RX_EN;
    }
    else if ((result = !strncmp(data, "_10_gpio10_IO21", 15)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_00_MUX_MODE::_10_gpio10_IO21;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
