/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class TMR1_ENBL_ENBL : uint8_t
{
    DISABLE /*!< Timer channel is disabled. */,
    ENABLE = 1 /*!< Timer channel is enabled. (default) */
};
static_assert(sizeof(TMR1_ENBL_ENBL) == 1);

/**
 * Converts TMR1_ENBL_ENBL to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(TMR1_ENBL_ENBL instance)
{
    const char *result = "UNKNOWN TMR1_ENBL_ENBL";

    switch (instance)
    {
    case TMR1_ENBL_ENBL::DISABLE:
        result = "DISABLE";
        break;
    case TMR1_ENBL_ENBL::ENABLE:
        result = "ENABLE";
        break;
    }

    return result;
}

/**
 * Converts a C string to TMR1_ENBL_ENBL.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, TMR1_ENBL_ENBL &output)
{
    bool result = false;

    if ((result = !strncmp(data, "DISABLE", 7)))
    {
        output = TMR1_ENBL_ENBL::DISABLE;
    }
    else if ((result = !strncmp(data, "ENABLE", 6)))
    {
        output = TMR1_ENBL_ENBL::ENABLE;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
