/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE : uint8_t
{
    _0_lpspi1_SDI /*!< Select mux mode: ALT0 mux port: LPSPI1_SIN of instance:
                     LPSPI1 */
        ,
    _1_usb_OTG2_PWR =
        1 /*!< Select mux mode: ALT1 mux port: USB_OTG2_PWR of instance: USB */
        ,
    _2_can2_RX = 2 /*!< Select mux mode: ALT2 mux port: FLEXCAN2_RX of
                      instance: FLEXCAN2 */
        ,
    _3_ENET_TX_DATA1 = 3 /*!< Select mux mode: ALT3 mux port: ENET_TX_DATA01 of
                            instance: ENET */
        ,
    _4_lpuart3_RX = 4 /*!< Select mux mode: ALT4 mux port: LPUART3_RXD of
                         instance: LPUART3 */
        ,
    _5_gpio_mux3_IO30 = 5 /*!< Select mux mode: ALT5 mux port: GPIO_MUX3_IO30
                             of instance: GPIO_MUX3 */
        ,
    _6_kpp_COL2 =
        6 /*!< Select mux mode: ALT6 mux port: KPP_COL02 of instance: KPP */,
    _8_flexio2_FLEXIO31 = 8 /*!< Select mux mode: ALT8 mux port: FLEXIO2_D31 of
                               instance: FLEXIO2 */
        ,
    _9_WDOG1_RESET_B_DEB = 9 /*!< Select mux mode: ALT9 mux port:
                                WDOG1_RESET_B_DEB of instance: WDOG1 */
        ,
    _10_gpio9_IO30 = 10 /*!< Select mux mode: ALT10 mux port: GPIO9_IO30 of
                           instance: GPIO9 */
};
static_assert(sizeof(IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE) == 1);

/**
 * Converts IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(
    IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE instance)
{
    const char *result = "UNKNOWN IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE";

    switch (instance)
    {
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE::_0_lpspi1_SDI:
        result = "_0_lpspi1_SDI";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE::_1_usb_OTG2_PWR:
        result = "_1_usb_OTG2_PWR";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE::_2_can2_RX:
        result = "_2_can2_RX";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE::_3_ENET_TX_DATA1:
        result = "_3_ENET_TX_DATA1";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE::_4_lpuart3_RX:
        result = "_4_lpuart3_RX";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE::_5_gpio_mux3_IO30:
        result = "_5_gpio_mux3_IO30";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE::_6_kpp_COL2:
        result = "_6_kpp_COL2";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE::_8_flexio2_FLEXIO31:
        result = "_8_flexio2_FLEXIO31";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE::_9_WDOG1_RESET_B_DEB:
        result = "_9_WDOG1_RESET_B_DEB";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE::_10_gpio9_IO30:
        result = "_10_gpio9_IO30";
        break;
    }

    return result;
}

/**
 * Converts a C string to IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0_lpspi1_SDI", 13)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE::_0_lpspi1_SDI;
    }
    else if ((result = !strncmp(data, "_1_usb_OTG2_PWR", 15)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE::_1_usb_OTG2_PWR;
    }
    else if ((result = !strncmp(data, "_2_can2_RX", 10)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE::_2_can2_RX;
    }
    else if ((result = !strncmp(data, "_3_ENET_TX_DATA1", 16)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE::_3_ENET_TX_DATA1;
    }
    else if ((result = !strncmp(data, "_4_lpuart3_RX", 13)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE::_4_lpuart3_RX;
    }
    else if ((result = !strncmp(data, "_5_gpio_mux3_IO30", 17)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE::_5_gpio_mux3_IO30;
    }
    else if ((result = !strncmp(data, "_6_kpp_COL2", 11)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE::_6_kpp_COL2;
    }
    else if ((result = !strncmp(data, "_8_flexio2_FLEXIO31", 19)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE::_8_flexio2_FLEXIO31;
    }
    else if ((result = !strncmp(data, "_9_WDOG1_RESET_B_DEB", 20)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE::_9_WDOG1_RESET_B_DEB;
    }
    else if ((result = !strncmp(data, "_10_gpio9_IO30", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_31_MUX_MODE::_10_gpio9_IO30;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
