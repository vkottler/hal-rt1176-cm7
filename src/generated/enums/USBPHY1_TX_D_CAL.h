/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class USBPHY1_TX_D_CAL : uint8_t
{
    MAX /*!< Maximum current, approximately 19% above nominal. */,
    NOMINAL = 7 /*!< Nominal */,
    MIN = 15 /*!< Minimum current, approximately 19% below nominal. */
};
static_assert(sizeof(USBPHY1_TX_D_CAL) == 1);

/**
 * Converts USBPHY1_TX_D_CAL to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USBPHY1_TX_D_CAL instance)
{
    const char *result = "UNKNOWN USBPHY1_TX_D_CAL";

    switch (instance)
    {
    case USBPHY1_TX_D_CAL::MAX:
        result = "MAX";
        break;
    case USBPHY1_TX_D_CAL::NOMINAL:
        result = "NOMINAL";
        break;
    case USBPHY1_TX_D_CAL::MIN:
        result = "MIN";
        break;
    }

    return result;
}

/**
 * Converts a C string to USBPHY1_TX_D_CAL.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USBPHY1_TX_D_CAL &output)
{
    bool result = false;

    if ((result = !strncmp(data, "MAX", 3)))
    {
        output = USBPHY1_TX_D_CAL::MAX;
    }
    else if ((result = !strncmp(data, "NOMINAL", 7)))
    {
        output = USBPHY1_TX_D_CAL::NOMINAL;
    }
    else if ((result = !strncmp(data, "MIN", 3)))
    {
        output = USBPHY1_TX_D_CAL::MIN;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
