/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class ENET_QOS_MAC_RXQ_CTRL0_RXQ1EN : uint8_t
{
    DISABLE /*!< Queue not enabled */,
    EN_AV = 1 /*!< Queue enabled for AV */,
    EN_DCB_GEN = 2 /*!< Queue enabled for DCB/Generic */
};
static_assert(sizeof(ENET_QOS_MAC_RXQ_CTRL0_RXQ1EN) == 1);

/**
 * Converts ENET_QOS_MAC_RXQ_CTRL0_RXQ1EN to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(ENET_QOS_MAC_RXQ_CTRL0_RXQ1EN instance)
{
    const char *result = "UNKNOWN ENET_QOS_MAC_RXQ_CTRL0_RXQ1EN";

    switch (instance)
    {
    case ENET_QOS_MAC_RXQ_CTRL0_RXQ1EN::DISABLE:
        result = "DISABLE";
        break;
    case ENET_QOS_MAC_RXQ_CTRL0_RXQ1EN::EN_AV:
        result = "EN_AV";
        break;
    case ENET_QOS_MAC_RXQ_CTRL0_RXQ1EN::EN_DCB_GEN:
        result = "EN_DCB_GEN";
        break;
    }

    return result;
}

/**
 * Converts a C string to ENET_QOS_MAC_RXQ_CTRL0_RXQ1EN.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        ENET_QOS_MAC_RXQ_CTRL0_RXQ1EN &output)
{
    bool result = false;

    if ((result = !strncmp(data, "DISABLE", 7)))
    {
        output = ENET_QOS_MAC_RXQ_CTRL0_RXQ1EN::DISABLE;
    }
    else if ((result = !strncmp(data, "EN_AV", 5)))
    {
        output = ENET_QOS_MAC_RXQ_CTRL0_RXQ1EN::EN_AV;
    }
    else if ((result = !strncmp(data, "EN_DCB_GEN", 10)))
    {
        output = ENET_QOS_MAC_RXQ_CTRL0_RXQ1EN::EN_DCB_GEN;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
