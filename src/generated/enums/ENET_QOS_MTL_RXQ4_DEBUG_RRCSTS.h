/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class ENET_QOS_MTL_RXQ4_DEBUG_RRCSTS : uint8_t
{
    IDLE /*!< Idle state */,
    READ_DATA = 1 /*!< Reading packet data */,
    READ_STS = 2 /*!< Reading packet status (or timestamp) */,
    FLUSH = 3 /*!< Flushing the packet data and status */
};
static_assert(sizeof(ENET_QOS_MTL_RXQ4_DEBUG_RRCSTS) == 1);

/**
 * Converts ENET_QOS_MTL_RXQ4_DEBUG_RRCSTS to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(ENET_QOS_MTL_RXQ4_DEBUG_RRCSTS instance)
{
    const char *result = "UNKNOWN ENET_QOS_MTL_RXQ4_DEBUG_RRCSTS";

    switch (instance)
    {
    case ENET_QOS_MTL_RXQ4_DEBUG_RRCSTS::IDLE:
        result = "IDLE";
        break;
    case ENET_QOS_MTL_RXQ4_DEBUG_RRCSTS::READ_DATA:
        result = "READ_DATA";
        break;
    case ENET_QOS_MTL_RXQ4_DEBUG_RRCSTS::READ_STS:
        result = "READ_STS";
        break;
    case ENET_QOS_MTL_RXQ4_DEBUG_RRCSTS::FLUSH:
        result = "FLUSH";
        break;
    }

    return result;
}

/**
 * Converts a C string to ENET_QOS_MTL_RXQ4_DEBUG_RRCSTS.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        ENET_QOS_MTL_RXQ4_DEBUG_RRCSTS &output)
{
    bool result = false;

    if ((result = !strncmp(data, "IDLE", 4)))
    {
        output = ENET_QOS_MTL_RXQ4_DEBUG_RRCSTS::IDLE;
    }
    else if ((result = !strncmp(data, "READ_DATA", 9)))
    {
        output = ENET_QOS_MTL_RXQ4_DEBUG_RRCSTS::READ_DATA;
    }
    else if ((result = !strncmp(data, "READ_STS", 8)))
    {
        output = ENET_QOS_MTL_RXQ4_DEBUG_RRCSTS::READ_STS;
    }
    else if ((result = !strncmp(data, "FLUSH", 5)))
    {
        output = ENET_QOS_MTL_RXQ4_DEBUG_RRCSTS::FLUSH;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
