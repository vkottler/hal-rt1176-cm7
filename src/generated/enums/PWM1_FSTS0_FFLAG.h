/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class PWM1_FSTS0_FFLAG : uint8_t
{
    NO_FLAG /*!< No fault on the FAULTx pin. */,
    FLAG = 1 /*!< Fault on the FAULTx pin. */
};
static_assert(sizeof(PWM1_FSTS0_FFLAG) == 1);

/**
 * Converts PWM1_FSTS0_FFLAG to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(PWM1_FSTS0_FFLAG instance)
{
    const char *result = "UNKNOWN PWM1_FSTS0_FFLAG";

    switch (instance)
    {
    case PWM1_FSTS0_FFLAG::NO_FLAG:
        result = "NO_FLAG";
        break;
    case PWM1_FSTS0_FFLAG::FLAG:
        result = "FLAG";
        break;
    }

    return result;
}

/**
 * Converts a C string to PWM1_FSTS0_FFLAG.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, PWM1_FSTS0_FFLAG &output)
{
    bool result = false;

    if ((result = !strncmp(data, "NO_FLAG", 7)))
    {
        output = PWM1_FSTS0_FFLAG::NO_FLAG;
    }
    else if ((result = !strncmp(data, "FLAG", 4)))
    {
        output = PWM1_FSTS0_FFLAG::FLAG;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
