/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_02_MUX_MODE : uint8_t
{
    _0_video_mux_LCDIF_HSYNC /*!< Select mux mode: ALT0 mux port:
                                VIDEO_MUX_LCDIF_HSYNC of instance: VIDEO_MUX */
        ,
    _1_ENET_1G_RX_DATA0 = 1 /*!< Select mux mode: ALT1 mux port:
                               ENET_1G_RX_DATA00 of instance: ENET_1G */
        ,
    _2_lpi2c3_SCL = 2 /*!< Select mux mode: ALT2 mux port: LPI2C3_SCL of
                         instance: LPI2C3 */
        ,
    _3_qtimer1_TIMER2 =
        3 /*!< Select mux mode: ALT3 mux port: TMR1_TIMER2 of instance: TMR1 */
        ,
    _4_XBAR1_INOUT28 = 4 /*!< Select mux mode: ALT4 mux port: XBAR1_INOUT28 of
                            instance: XBAR1 */
        ,
    _5_gpio_mux4_IO23 = 5 /*!< Select mux mode: ALT5 mux port: GPIO_MUX4_IO23
                             of instance: GPIO_MUX4 */
        ,
    _8_ENET_QOS_RX_DATA0 = 8 /*!< Select mux mode: ALT8 mux port:
                                ENET_QOS_RX_DATA00 of instance: ENET_QOS */
        ,
    _9_lpuart1_TX = 9 /*!< Select mux mode: ALT9 mux port: LPUART1_TXD of
                         instance: LPUART1 */
        ,
    _10_gpio10_IO23 = 10 /*!< Select mux mode: ALT10 mux port: GPIO10_IO23 of
                            instance: GPIO10 */
};
static_assert(sizeof(IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_02_MUX_MODE) == 1);

/**
 * Converts IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_02_MUX_MODE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(
    IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_02_MUX_MODE instance)
{
    const char *result =
        "UNKNOWN IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_02_MUX_MODE";

    switch (instance)
    {
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_02_MUX_MODE::
        _0_video_mux_LCDIF_HSYNC:
        result = "_0_video_mux_LCDIF_HSYNC";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_02_MUX_MODE::_1_ENET_1G_RX_DATA0:
        result = "_1_ENET_1G_RX_DATA0";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_02_MUX_MODE::_2_lpi2c3_SCL:
        result = "_2_lpi2c3_SCL";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_02_MUX_MODE::_3_qtimer1_TIMER2:
        result = "_3_qtimer1_TIMER2";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_02_MUX_MODE::_4_XBAR1_INOUT28:
        result = "_4_XBAR1_INOUT28";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_02_MUX_MODE::_5_gpio_mux4_IO23:
        result = "_5_gpio_mux4_IO23";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_02_MUX_MODE::_8_ENET_QOS_RX_DATA0:
        result = "_8_ENET_QOS_RX_DATA0";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_02_MUX_MODE::_9_lpuart1_TX:
        result = "_9_lpuart1_TX";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_02_MUX_MODE::_10_gpio10_IO23:
        result = "_10_gpio10_IO23";
        break;
    }

    return result;
}

/**
 * Converts a C string to IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_02_MUX_MODE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_02_MUX_MODE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0_video_mux_LCDIF_HSYNC", 24)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_02_MUX_MODE::
            _0_video_mux_LCDIF_HSYNC;
    }
    else if ((result = !strncmp(data, "_1_ENET_1G_RX_DATA0", 19)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_02_MUX_MODE::
            _1_ENET_1G_RX_DATA0;
    }
    else if ((result = !strncmp(data, "_2_lpi2c3_SCL", 13)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_02_MUX_MODE::_2_lpi2c3_SCL;
    }
    else if ((result = !strncmp(data, "_3_qtimer1_TIMER2", 17)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_02_MUX_MODE::_3_qtimer1_TIMER2;
    }
    else if ((result = !strncmp(data, "_4_XBAR1_INOUT28", 16)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_02_MUX_MODE::_4_XBAR1_INOUT28;
    }
    else if ((result = !strncmp(data, "_5_gpio_mux4_IO23", 17)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_02_MUX_MODE::_5_gpio_mux4_IO23;
    }
    else if ((result = !strncmp(data, "_8_ENET_QOS_RX_DATA0", 20)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_02_MUX_MODE::
            _8_ENET_QOS_RX_DATA0;
    }
    else if ((result = !strncmp(data, "_9_lpuart1_TX", 13)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_02_MUX_MODE::_9_lpuart1_TX;
    }
    else if ((result = !strncmp(data, "_10_gpio10_IO23", 15)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B1_02_MUX_MODE::_10_gpio10_IO23;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
