/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B2_09_MUX_MODE : uint8_t
{
    _0_video_mux_LCDIF_DATA17 /*!< Select mux mode: ALT0 mux port:
                                 VIDEO_MUX_LCDIF_DATA17 of instance: VIDEO_MUX
                               */
        ,
    _1_enet_RX_ER =
        1 /*!< Select mux mode: ALT1 mux port: ENET_RX_ER of instance: ENET */,
    _2_lpuart8_RX = 2 /*!< Select mux mode: ALT2 mux port: LPUART8_RXD of
                         instance: LPUART8 */
        ,
    _3_cm7_imxrt_RXEV = 3 /*!< Select mux mode: ALT3 mux port: ARM_CM7_EVENTI
                             of instance: CM7 */
        ,
    _4_sai1_TX_SYNC = 4 /*!< Select mux mode: ALT4 mux port: SAI1_TX_SYNC of
                           instance: SAI1 */
        ,
    _5_gpio_mux5_IO10 = 5 /*!< Select mux mode: ALT5 mux port: GPIO_MUX5_IO10
                             of instance: GPIO_MUX5 */
        ,
    _8_enet_qos_RX_ER = 8 /*!< Select mux mode: ALT8 mux port: ENET_QOS_RX_ER
                             of instance: ENET_QOS */
        ,
    _9_lpuart1_RX = 9 /*!< Select mux mode: ALT9 mux port: LPUART1_RXD of
                         instance: LPUART1 */
        ,
    _10_gpio11_IO10 = 10 /*!< Select mux mode: ALT10 mux port: GPIO11_IO10 of
                            instance: GPIO11 */
};
static_assert(sizeof(IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B2_09_MUX_MODE) == 1);

/**
 * Converts IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B2_09_MUX_MODE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(
    IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B2_09_MUX_MODE instance)
{
    const char *result =
        "UNKNOWN IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B2_09_MUX_MODE";

    switch (instance)
    {
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B2_09_MUX_MODE::
        _0_video_mux_LCDIF_DATA17:
        result = "_0_video_mux_LCDIF_DATA17";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B2_09_MUX_MODE::_1_enet_RX_ER:
        result = "_1_enet_RX_ER";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B2_09_MUX_MODE::_2_lpuart8_RX:
        result = "_2_lpuart8_RX";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B2_09_MUX_MODE::_3_cm7_imxrt_RXEV:
        result = "_3_cm7_imxrt_RXEV";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B2_09_MUX_MODE::_4_sai1_TX_SYNC:
        result = "_4_sai1_TX_SYNC";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B2_09_MUX_MODE::_5_gpio_mux5_IO10:
        result = "_5_gpio_mux5_IO10";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B2_09_MUX_MODE::_8_enet_qos_RX_ER:
        result = "_8_enet_qos_RX_ER";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B2_09_MUX_MODE::_9_lpuart1_RX:
        result = "_9_lpuart1_RX";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B2_09_MUX_MODE::_10_gpio11_IO10:
        result = "_10_gpio11_IO10";
        break;
    }

    return result;
}

/**
 * Converts a C string to IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B2_09_MUX_MODE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B2_09_MUX_MODE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0_video_mux_LCDIF_DATA17", 25)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B2_09_MUX_MODE::
            _0_video_mux_LCDIF_DATA17;
    }
    else if ((result = !strncmp(data, "_1_enet_RX_ER", 13)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B2_09_MUX_MODE::_1_enet_RX_ER;
    }
    else if ((result = !strncmp(data, "_2_lpuart8_RX", 13)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B2_09_MUX_MODE::_2_lpuart8_RX;
    }
    else if ((result = !strncmp(data, "_3_cm7_imxrt_RXEV", 17)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B2_09_MUX_MODE::_3_cm7_imxrt_RXEV;
    }
    else if ((result = !strncmp(data, "_4_sai1_TX_SYNC", 15)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B2_09_MUX_MODE::_4_sai1_TX_SYNC;
    }
    else if ((result = !strncmp(data, "_5_gpio_mux5_IO10", 17)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B2_09_MUX_MODE::_5_gpio_mux5_IO10;
    }
    else if ((result = !strncmp(data, "_8_enet_qos_RX_ER", 17)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B2_09_MUX_MODE::_8_enet_qos_RX_ER;
    }
    else if ((result = !strncmp(data, "_9_lpuart1_RX", 13)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B2_09_MUX_MODE::_9_lpuart1_RX;
    }
    else if ((result = !strncmp(data, "_10_gpio11_IO10", 15)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_DISP_B2_09_MUX_MODE::_10_gpio11_IO10;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
