/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE : uint8_t
{
    _0_spdif_IN /*!< Select mux mode: ALT0 mux port: SPDIF_IN of instance:
                   SPDIF */
        ,
    _1_lpuart10_TX = 1 /*!< Select mux mode: ALT1 mux port: LPUART10_TXD of
                          instance: LPUART10 */
        ,
    _2_gpt1_COMPARE2 = 2 /*!< Select mux mode: ALT2 mux port: GPT1_COMPARE2 of
                            instance: GPT1 */
        ,
    _3_flexspi1_B_DATA0 = 3 /*!< Select mux mode: ALT3 mux port:
                               FLEXSPI1_B_DATA00 of instance: FLEXSPI1 */
        ,
    _4_video_mux_CSI_HSYNC = 4 /*!< Select mux mode: ALT4 mux port:
                                  VIDEO_MUX_CSI_HSYNC of instance: VIDEO_MUX */
        ,
    _5_gpio_mux3_IO14 = 5 /*!< Select mux mode: ALT5 mux port: GPIO_MUX3_IO14
                             of instance: GPIO_MUX3 */
        ,
    _6_enet_TX_ER =
        6 /*!< Select mux mode: ALT6 mux port: ENET_TX_ER of instance: ENET */,
    _8_flexio2_FLEXIO15 = 8 /*!< Select mux mode: ALT8 mux port: FLEXIO2_D15 of
                               instance: FLEXIO2 */
        ,
    _10_gpio9_IO14 = 10 /*!< Select mux mode: ALT10 mux port: GPIO9_IO14 of
                           instance: GPIO9 */
        ,
    _11_flexpwm3_PWMX1 = 11 /*!< Select mux mode: ALT11 mux port:
                               FLEXPWM3_PWM1_X of instance: FLEXPWM3 */
};
static_assert(sizeof(IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE) == 1);

/**
 * Converts IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(
    IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE instance)
{
    const char *result = "UNKNOWN IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE";

    switch (instance)
    {
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE::_0_spdif_IN:
        result = "_0_spdif_IN";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE::_1_lpuart10_TX:
        result = "_1_lpuart10_TX";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE::_2_gpt1_COMPARE2:
        result = "_2_gpt1_COMPARE2";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE::_3_flexspi1_B_DATA0:
        result = "_3_flexspi1_B_DATA0";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE::_4_video_mux_CSI_HSYNC:
        result = "_4_video_mux_CSI_HSYNC";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE::_5_gpio_mux3_IO14:
        result = "_5_gpio_mux3_IO14";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE::_6_enet_TX_ER:
        result = "_6_enet_TX_ER";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE::_8_flexio2_FLEXIO15:
        result = "_8_flexio2_FLEXIO15";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE::_10_gpio9_IO14:
        result = "_10_gpio9_IO14";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE::_11_flexpwm3_PWMX1:
        result = "_11_flexpwm3_PWMX1";
        break;
    }

    return result;
}

/**
 * Converts a C string to IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0_spdif_IN", 11)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE::_0_spdif_IN;
    }
    else if ((result = !strncmp(data, "_1_lpuart10_TX", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE::_1_lpuart10_TX;
    }
    else if ((result = !strncmp(data, "_2_gpt1_COMPARE2", 16)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE::_2_gpt1_COMPARE2;
    }
    else if ((result = !strncmp(data, "_3_flexspi1_B_DATA0", 19)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE::_3_flexspi1_B_DATA0;
    }
    else if ((result = !strncmp(data, "_4_video_mux_CSI_HSYNC", 22)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE::_4_video_mux_CSI_HSYNC;
    }
    else if ((result = !strncmp(data, "_5_gpio_mux3_IO14", 17)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE::_5_gpio_mux3_IO14;
    }
    else if ((result = !strncmp(data, "_6_enet_TX_ER", 13)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE::_6_enet_TX_ER;
    }
    else if ((result = !strncmp(data, "_8_flexio2_FLEXIO15", 19)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE::_8_flexio2_FLEXIO15;
    }
    else if ((result = !strncmp(data, "_10_gpio9_IO14", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE::_10_gpio9_IO14;
    }
    else if ((result = !strncmp(data, "_11_flexpwm3_PWMX1", 18)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_15_MUX_MODE::_11_flexpwm3_PWMX1;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
