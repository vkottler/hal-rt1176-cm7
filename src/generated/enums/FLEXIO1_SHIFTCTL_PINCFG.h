/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class FLEXIO1_SHIFTCTL_PINCFG : uint8_t
{
    disable /*!< Shifter pin output disabled */,
    opend_bidirouten =
        1 /*!< Shifter pin open drain or bidirectional output enable */,
    bidir_outdata = 2 /*!< Shifter pin bidirectional output data */,
    output = 3 /*!< Shifter pin output */
};
static_assert(sizeof(FLEXIO1_SHIFTCTL_PINCFG) == 1);

/**
 * Converts FLEXIO1_SHIFTCTL_PINCFG to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(FLEXIO1_SHIFTCTL_PINCFG instance)
{
    const char *result = "UNKNOWN FLEXIO1_SHIFTCTL_PINCFG";

    switch (instance)
    {
    case FLEXIO1_SHIFTCTL_PINCFG::disable:
        result = "disable";
        break;
    case FLEXIO1_SHIFTCTL_PINCFG::opend_bidirouten:
        result = "opend_bidirouten";
        break;
    case FLEXIO1_SHIFTCTL_PINCFG::bidir_outdata:
        result = "bidir_outdata";
        break;
    case FLEXIO1_SHIFTCTL_PINCFG::output:
        result = "output";
        break;
    }

    return result;
}

/**
 * Converts a C string to FLEXIO1_SHIFTCTL_PINCFG.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, FLEXIO1_SHIFTCTL_PINCFG &output)
{
    bool result = false;

    if ((result = !strncmp(data, "disable", 7)))
    {
        output = FLEXIO1_SHIFTCTL_PINCFG::disable;
    }
    else if ((result = !strncmp(data, "opend_bidirouten", 16)))
    {
        output = FLEXIO1_SHIFTCTL_PINCFG::opend_bidirouten;
    }
    else if ((result = !strncmp(data, "bidir_outdata", 13)))
    {
        output = FLEXIO1_SHIFTCTL_PINCFG::bidir_outdata;
    }
    else if ((result = !strncmp(data, "output", 6)))
    {
        output = FLEXIO1_SHIFTCTL_PINCFG::output;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
