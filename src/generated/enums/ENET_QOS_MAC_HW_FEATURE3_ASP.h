/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class ENET_QOS_MAC_HW_FEATURE3_ASP : uint8_t
{
    NONE /*!< No Safety features selected */,
    ECC_ONLY =
        1 /*!< Only "ECC protection for external memory" feature is selected */
        ,
    AS_NPPE = 2 /*!< All the Automotive Safety features are selected without
                   the "Parity Port Enable for external interface" feature */
        ,
    AS_PPE = 3 /*!< All the Automotive Safety features are selected with the
                  "Parity Port Enable for external interface" feature */
};
static_assert(sizeof(ENET_QOS_MAC_HW_FEATURE3_ASP) == 1);

/**
 * Converts ENET_QOS_MAC_HW_FEATURE3_ASP to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(ENET_QOS_MAC_HW_FEATURE3_ASP instance)
{
    const char *result = "UNKNOWN ENET_QOS_MAC_HW_FEATURE3_ASP";

    switch (instance)
    {
    case ENET_QOS_MAC_HW_FEATURE3_ASP::NONE:
        result = "NONE";
        break;
    case ENET_QOS_MAC_HW_FEATURE3_ASP::ECC_ONLY:
        result = "ECC_ONLY";
        break;
    case ENET_QOS_MAC_HW_FEATURE3_ASP::AS_NPPE:
        result = "AS_NPPE";
        break;
    case ENET_QOS_MAC_HW_FEATURE3_ASP::AS_PPE:
        result = "AS_PPE";
        break;
    }

    return result;
}

/**
 * Converts a C string to ENET_QOS_MAC_HW_FEATURE3_ASP.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, ENET_QOS_MAC_HW_FEATURE3_ASP &output)
{
    bool result = false;

    if ((result = !strncmp(data, "NONE", 4)))
    {
        output = ENET_QOS_MAC_HW_FEATURE3_ASP::NONE;
    }
    else if ((result = !strncmp(data, "ECC_ONLY", 8)))
    {
        output = ENET_QOS_MAC_HW_FEATURE3_ASP::ECC_ONLY;
    }
    else if ((result = !strncmp(data, "AS_NPPE", 7)))
    {
        output = ENET_QOS_MAC_HW_FEATURE3_ASP::AS_NPPE;
    }
    else if ((result = !strncmp(data, "AS_PPE", 6)))
    {
        output = ENET_QOS_MAC_HW_FEATURE3_ASP::AS_PPE;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
