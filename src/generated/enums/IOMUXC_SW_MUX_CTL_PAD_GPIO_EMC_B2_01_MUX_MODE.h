/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM7
{

enum class IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE : uint8_t
{
    _0_semc_DATA17 /*!< Select mux mode: ALT0 mux port: SEMC_DATA17 of
                      instance: SEMC */
        ,
    _1_usdhc2_CD_B = 1 /*!< Select mux mode: ALT1 mux port: USDHC2_CD_B of
                          instance: USDHC2 */
        ,
    _2_qtimer4_TIMER1 =
        2 /*!< Select mux mode: ALT2 mux port: TMR4_TIMER1 of instance: TMR4 */
        ,
    _3_lpuart6_RTS_B = 3 /*!< Select mux mode: ALT3 mux port: LPUART6_RTS_B of
                            instance: LPUART6 */
        ,
    _4_flexspi2_B_DATA5 = 4 /*!< Select mux mode: ALT4 mux port:
                               FLEXSPI2_B_DATA05 of instance: FLEXSPI2 */
        ,
    _5_gpio_mux2_IO11 = 5 /*!< Select mux mode: ALT5 mux port: GPIO_MUX2_IO11
                             of instance: GPIO_MUX2 */
        ,
    _6_XBAR1_INOUT21 = 6 /*!< Select mux mode: ALT6 mux port: XBAR1_INOUT21 of
                            instance: XBAR1 */
        ,
    _7_enet_qos_1588_EVENT1_IN =
        7 /*!< Select mux mode: ALT7 mux port: ENET_QOS_1588_EVENT1_IN of
             instance: ENET_QOS */
        ,
    _8_lpspi1_PCS0 = 8 /*!< Select mux mode: ALT8 mux port: LPSPI1_PCS0 of
                          instance: LPSPI1 */
        ,
    _9_lpi2c2_SDA = 9 /*!< Select mux mode: ALT9 mux port: LPI2C2_SDA of
                         instance: LPI2C2 */
        ,
    _10_gpio8_IO11 = 10 /*!< Select mux mode: ALT10 mux port: GPIO8_IO11 of
                           instance: GPIO8 */
        ,
    _11_flexpwm3_PWMB0 = 11 /*!< Select mux mode: ALT11 mux port:
                               FLEXPWM3_PWM0_B of instance: FLEXPWM3 */
};
static_assert(sizeof(IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE) == 1);

/**
 * Converts IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(
    IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE instance)
{
    const char *result =
        "UNKNOWN IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE";

    switch (instance)
    {
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE::_0_semc_DATA17:
        result = "_0_semc_DATA17";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE::_1_usdhc2_CD_B:
        result = "_1_usdhc2_CD_B";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE::_2_qtimer4_TIMER1:
        result = "_2_qtimer4_TIMER1";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE::_3_lpuart6_RTS_B:
        result = "_3_lpuart6_RTS_B";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE::_4_flexspi2_B_DATA5:
        result = "_4_flexspi2_B_DATA5";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE::_5_gpio_mux2_IO11:
        result = "_5_gpio_mux2_IO11";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE::_6_XBAR1_INOUT21:
        result = "_6_XBAR1_INOUT21";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE::
        _7_enet_qos_1588_EVENT1_IN:
        result = "_7_enet_qos_1588_EVENT1_IN";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE::_8_lpspi1_PCS0:
        result = "_8_lpspi1_PCS0";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE::_9_lpi2c2_SDA:
        result = "_9_lpi2c2_SDA";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE::_10_gpio8_IO11:
        result = "_10_gpio8_IO11";
        break;
    case IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE::_11_flexpwm3_PWMB0:
        result = "_11_flexpwm3_PWMB0";
        break;
    }

    return result;
}

/**
 * Converts a C string to IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0_semc_DATA17", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE::_0_semc_DATA17;
    }
    else if ((result = !strncmp(data, "_1_usdhc2_CD_B", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE::_1_usdhc2_CD_B;
    }
    else if ((result = !strncmp(data, "_2_qtimer4_TIMER1", 17)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE::_2_qtimer4_TIMER1;
    }
    else if ((result = !strncmp(data, "_3_lpuart6_RTS_B", 16)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE::_3_lpuart6_RTS_B;
    }
    else if ((result = !strncmp(data, "_4_flexspi2_B_DATA5", 19)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE::_4_flexspi2_B_DATA5;
    }
    else if ((result = !strncmp(data, "_5_gpio_mux2_IO11", 17)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE::_5_gpio_mux2_IO11;
    }
    else if ((result = !strncmp(data, "_6_XBAR1_INOUT21", 16)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE::_6_XBAR1_INOUT21;
    }
    else if ((result = !strncmp(data, "_7_enet_qos_1588_EVENT1_IN", 26)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE::
            _7_enet_qos_1588_EVENT1_IN;
    }
    else if ((result = !strncmp(data, "_8_lpspi1_PCS0", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE::_8_lpspi1_PCS0;
    }
    else if ((result = !strncmp(data, "_9_lpi2c2_SDA", 13)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE::_9_lpi2c2_SDA;
    }
    else if ((result = !strncmp(data, "_10_gpio8_IO11", 14)))
    {
        output = IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE::_10_gpio8_IO11;
    }
    else if ((result = !strncmp(data, "_11_flexpwm3_PWMB0", 18)))
    {
        output =
            IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_B2_01_MUX_MODE::_11_flexpwm3_PWMB0;
    }

    return result;
}

}; // namespace MIMXRT1176::CM7
